{
  "address": "0x7beCBA11618Ca63Ead5605DE235f6dD3b25c530E",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tco2",
          "type": "address"
        }
      ],
      "name": "AddFeeExemptedTCO2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "methodology",
          "type": "string"
        }
      ],
      "name": "AttributeMethodologyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "methodology",
          "type": "string"
        }
      ],
      "name": "AttributeMethodologyRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "region",
          "type": "string"
        }
      ],
      "name": "AttributeRegionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "region",
          "type": "string"
        }
      ],
      "name": "AttributeRegionRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "standard",
          "type": "string"
        }
      ],
      "name": "AttributeStandardAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "standard",
          "type": "string"
        }
      ],
      "name": "AttributeStandardRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20Addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20addr",
          "type": "address"
        }
      ],
      "name": "ExternalAddressRemovedFromWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20addr",
          "type": "address"
        }
      ],
      "name": "ExternalAddressWhitelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20addr",
          "type": "address"
        }
      ],
      "name": "InternalAddressBlacklisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20addr",
          "type": "address"
        }
      ],
      "name": "InternalAddressRemovedFromBlackList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20addr",
          "type": "address"
        }
      ],
      "name": "InternalAddressRemovedFromWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20addr",
          "type": "address"
        }
      ],
      "name": "InternalAddressWhitelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "mappingName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        }
      ],
      "name": "MappingSwitched",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimumVintageStartTime",
          "type": "uint256"
        }
      ],
      "name": "MinimumVintageStartTimeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fees",
          "type": "uint256"
        }
      ],
      "name": "RedeemFeeBurnt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fees",
          "type": "uint256"
        }
      ],
      "name": "RedeemFeePaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "erc20",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tco2",
          "type": "address"
        }
      ],
      "name": "RemoveFeeExemptedTCO2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCap",
          "type": "uint256"
        }
      ],
      "name": "SupplyCapUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tco2s",
          "type": "address[]"
        }
      ],
      "name": "TCO2ScoringUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ContractRegistry",
          "type": "address"
        }
      ],
      "name": "ToucanRegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MANAGER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "addToList",
          "type": "bool"
        },
        {
          "internalType": "string[]",
          "name": "_regions",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_standards",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_methodologies",
          "type": "string[]"
        }
      ],
      "name": "addAttributes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addRedeemFeeExemptedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tco2",
          "type": "address"
        }
      ],
      "name": "addRedeemFeeExemptedTCO2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "erc20Addr",
          "type": "address[]"
        }
      ],
      "name": "addToExternalWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "erc20Addr",
          "type": "address[]"
        }
      ],
      "name": "addToInternalBlackList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "erc20Addr",
          "type": "address[]"
        }
      ],
      "name": "addToInternalWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "bridgeBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "bridgeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tco2s",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "calculateRedeemFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Addr",
          "type": "address"
        }
      ],
      "name": "checkAttributeMatching",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Addr",
          "type": "address"
        }
      ],
      "name": "checkEligible",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "externalWhiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRedeemBurnAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRedeemBurnPercentageInBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRedeemDivider",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRedeemPercentageInBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRedeemReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getScoredTCO2s",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "internalBlackList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "internalWhiteList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "methodologies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "methodologiesIsAcceptedMapping",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumVintageStartTime",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tco2",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeemAndBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeemAuto",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeemAuto2",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tco2s",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "redeemFeeExemptedAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "redeemFeeExemptedTCO2s",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tco2s",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "redeemMany",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "regions",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "regionsIsAcceptedMapping",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "erc20Addr",
          "type": "address[]"
        }
      ],
      "name": "removeFromExternalWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "erc20Addr",
          "type": "address[]"
        }
      ],
      "name": "removeFromInternalBlackList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "erc20Addr",
          "type": "address[]"
        }
      ],
      "name": "removeFromInternalWhiteList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeRedeemFeeExemptedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tco2",
          "type": "address"
        }
      ],
      "name": "removeRedeemFeeExemptedTCO2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "scoredTCO2s",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedMode",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeRedeemBurnAddress",
          "type": "address"
        }
      ],
      "name": "setFeeRedeemBurnAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feeRedeemBurnPercentageInBase",
          "type": "uint256"
        }
      ],
      "name": "setFeeRedeemBurnPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feeRedeemPercentageInBase",
          "type": "uint256"
        }
      ],
      "name": "setFeeRedeemPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeRedeemReceiver",
          "type": "address"
        }
      ],
      "name": "setFeeRedeemReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_minimumVintageStartTime",
          "type": "uint64"
        }
      ],
      "name": "setMinimumVintageStartTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "name": "setRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newCap",
          "type": "uint256"
        }
      ],
      "name": "setSupplyCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tco2s",
          "type": "address[]"
        }
      ],
      "name": "setTCO2Scoring",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setToucanContractRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "standards",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "standardsIsAcceptedMapping",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_mappingName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        }
      ],
      "name": "switchMapping",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "numDeployments": 3,
  "solcInputHash": "4c1ab04e99661e37f1e086c79d8b53cb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tco2\",\"type\":\"address\"}],\"name\":\"AddFeeExemptedTCO2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"methodology\",\"type\":\"string\"}],\"name\":\"AttributeMethodologyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"methodology\",\"type\":\"string\"}],\"name\":\"AttributeMethodologyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"region\",\"type\":\"string\"}],\"name\":\"AttributeRegionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"region\",\"type\":\"string\"}],\"name\":\"AttributeRegionRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"standard\",\"type\":\"string\"}],\"name\":\"AttributeStandardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"standard\",\"type\":\"string\"}],\"name\":\"AttributeStandardRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20Addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20addr\",\"type\":\"address\"}],\"name\":\"ExternalAddressRemovedFromWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20addr\",\"type\":\"address\"}],\"name\":\"ExternalAddressWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20addr\",\"type\":\"address\"}],\"name\":\"InternalAddressBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20addr\",\"type\":\"address\"}],\"name\":\"InternalAddressRemovedFromBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20addr\",\"type\":\"address\"}],\"name\":\"InternalAddressRemovedFromWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20addr\",\"type\":\"address\"}],\"name\":\"InternalAddressWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mappingName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"}],\"name\":\"MappingSwitched\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumVintageStartTime\",\"type\":\"uint256\"}],\"name\":\"MinimumVintageStartTimeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"RedeemFeeBurnt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"RedeemFeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tco2\",\"type\":\"address\"}],\"name\":\"RemoveFeeExemptedTCO2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"SupplyCapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tco2s\",\"type\":\"address[]\"}],\"name\":\"TCO2ScoringUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ContractRegistry\",\"type\":\"address\"}],\"name\":\"ToucanRegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"addToList\",\"type\":\"bool\"},{\"internalType\":\"string[]\",\"name\":\"_regions\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_standards\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_methodologies\",\"type\":\"string[]\"}],\"name\":\"addAttributes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addRedeemFeeExemptedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tco2\",\"type\":\"address\"}],\"name\":\"addRedeemFeeExemptedTCO2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"erc20Addr\",\"type\":\"address[]\"}],\"name\":\"addToExternalWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"erc20Addr\",\"type\":\"address[]\"}],\"name\":\"addToInternalBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"erc20Addr\",\"type\":\"address[]\"}],\"name\":\"addToInternalWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"bridgeBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"bridgeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tco2s\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"calculateRedeemFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Addr\",\"type\":\"address\"}],\"name\":\"checkAttributeMatching\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Addr\",\"type\":\"address\"}],\"name\":\"checkEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"externalWhiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRedeemBurnAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRedeemBurnPercentageInBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRedeemDivider\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRedeemPercentageInBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRedeemReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getScoredTCO2s\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"internalBlackList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"internalWhiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"methodologies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"methodologiesIsAcceptedMapping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumVintageStartTime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tco2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeemAndBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeemAuto\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeemAuto2\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tco2s\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redeemFeeExemptedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redeemFeeExemptedTCO2s\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tco2s\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"redeemMany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"regions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"regionsIsAcceptedMapping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"erc20Addr\",\"type\":\"address[]\"}],\"name\":\"removeFromExternalWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"erc20Addr\",\"type\":\"address[]\"}],\"name\":\"removeFromInternalBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"erc20Addr\",\"type\":\"address[]\"}],\"name\":\"removeFromInternalWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeRedeemFeeExemptedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tco2\",\"type\":\"address\"}],\"name\":\"removeRedeemFeeExemptedTCO2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"scoredTCO2s\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRedeemBurnAddress\",\"type\":\"address\"}],\"name\":\"setFeeRedeemBurnAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeRedeemBurnPercentageInBase\",\"type\":\"uint256\"}],\"name\":\"setFeeRedeemBurnPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeRedeemPercentageInBase\",\"type\":\"uint256\"}],\"name\":\"setFeeRedeemPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRedeemReceiver\",\"type\":\"address\"}],\"name\":\"setFeeRedeemReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_minimumVintageStartTime\",\"type\":\"uint64\"}],\"name\":\"setMinimumVintageStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"setSupplyCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tco2s\",\"type\":\"address[]\"}],\"name\":\"setTCO2Scoring\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setToucanContractRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"standards\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"standardsIsAcceptedMapping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_mappingName\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"}],\"name\":\"switchMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAttributes(bool,string[],string[],string[])\":{\"params\":{\"addToList\":\"determines whether attribute should be added or removed Other params are arrays of attributes to be added\"}},\"addRedeemFeeExemptedAddress(address)\":{\"params\":{\"_address\":\"address to be exempted on redeem fees\"}},\"addRedeemFeeExemptedTCO2(address)\":{\"params\":{\"_tco2\":\"TCO2 to be exempted on redeem fees\"}},\"addToExternalWhiteList(address[])\":{\"params\":{\"erc20Addr\":\"accepts an array of contract addresses\"}},\"addToInternalBlackList(address[])\":{\"params\":{\"erc20Addr\":\"accepts an array of contract addresses\"}},\"addToInternalWhiteList(address[])\":{\"params\":{\"erc20Addr\":\"accepts an array of contract addresses\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"bridgeBurn(address,uint256)\":{\"details\":\"invoked only by the ToucanCrosschainMessenger (Router)\",\"params\":{\"_account\":\"account that will be burned with corss-chain bridged tokens\",\"_amount\":\"amount of tokens that will be burned\"}},\"bridgeMint(address,uint256)\":{\"details\":\"invoked only by the ToucanCrosschainMessenger (Router)\",\"params\":{\"_account\":\"account that will be minted with corss-chain bridged tokens\",\"_amount\":\"amount of tokens that will be minted\"}},\"calculateRedeemFees(address[],uint256[])\":{\"details\":\"User specifies in front-end the addresses and amounts they want\",\"params\":{\"amounts\":\"Array of amounts to redeem for each tco2s\",\"tco2s\":\"Array of TCO2 contract addresses\"},\"returns\":{\"_0\":\"Total fees amount\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(address,uint256)\":{\"details\":\"Eligibility is checked via `checkEligible`, balances are tracked for each TCO2 separately\",\"params\":{\"erc20Addr\":\"ERC20 contract address to be deposited, requires approve\"}},\"getRemaining()\":{\"details\":\"Returns the remaining space in pool before hitting the cap\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"wraps _pause(), only Admin\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"redeemAndBurn(address,uint256)\":{\"details\":\"User needs to approve the pool contract in the TCO2 contract for the amount to be burnt before executing this function.\",\"params\":{\"amount\":\"Amount to redeem and burn\",\"tco2\":\"TCO2 to redeem and burn\"}},\"redeemAuto(uint256)\":{\"details\":\"NCT Pool tokens in user's wallet get burned\",\"params\":{\"amount\":\"Total amount to be redeemed\"}},\"redeemAuto2(uint256)\":{\"params\":{\"amount\":\"Total amount to be redeemed\"},\"returns\":{\"tco2s\":\"amounts The addresses and amounts of the TCO2s that were automatically redeemed\"}},\"redeemMany(address[],uint256[])\":{\"details\":\"User specifies in front-end the addresses and amounts they want\",\"params\":{\"amounts\":\"Array of amounts to redeem for each tco2s NCT Pool token in user's wallet get burned\",\"tco2s\":\"Array of TCO2 contract addresses\"}},\"removeFromExternalWhiteList(address[])\":{\"params\":{\"erc20Addr\":\"accepts an array of contract addresses\"}},\"removeFromInternalBlackList(address[])\":{\"params\":{\"erc20Addr\":\"accepts an array of contract addresses\"}},\"removeFromInternalWhiteList(address[])\":{\"params\":{\"erc20Addr\":\"accepts an array of contract addressesc\"}},\"removeRedeemFeeExemptedAddress(address)\":{\"params\":{\"_address\":\"address to be removed from exemption\"}},\"removeRedeemFeeExemptedTCO2(address)\":{\"params\":{\"_tco2\":\"TCO2 to be removed from exemption\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setFeeRedeemBurnAddress(address)\":{\"params\":{\"_feeRedeemBurnAddress\":\"address to transfer the fees to burn\"}},\"setFeeRedeemBurnPercentage(uint256)\":{\"params\":{\"_feeRedeemBurnPercentageInBase\":\"percentage of fee in base\"}},\"setFeeRedeemPercentage(uint256)\":{\"params\":{\"_feeRedeemPercentageInBase\":\"percentage of fee in base\"}},\"setFeeRedeemReceiver(address)\":{\"params\":{\"_feeRedeemReceiver\":\"address to transfer the fees\"}},\"setMinimumVintageStartTime(uint64)\":{\"params\":{\"_minimumVintageStartTime\":\"unix time format\"}},\"setRouter(address)\":{\"details\":\"use this method to set router address\",\"params\":{\"_router\":\"address of ToucanCrosschainMessenger\"}},\"setSupplyCap(uint256)\":{\"details\":\"supplyCap is initially set to 0 and must be increased before deposits\"},\"setTCO2Scoring(address[])\":{\"params\":{\"tco2s\":\"array of ordered TCO2 addresses\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"switchMapping(string,bool)\":{\"params\":{\"_mappingName\":\"attribute mapping of project-vintage data\",\"accepted\":\"determines if mapping works as black or whitelist\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpause the system, wraps _unpause(), only Admin\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"version()\":{\"details\":\"Returns the current version of the smart contract\"}},\"stateVariables\":{\"feeRedeemDivider\":{\"details\":\"fees redeem percentage with 2 fixed decimals precision\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAttributes(bool,string[],string[],string[])\":{\"notice\":\"Function to add attributes for filtering (does not support complex AttributeSets)\"},\"addRedeemFeeExemptedAddress(address)\":{\"notice\":\"Adds a new address for redeem fees exemption\"},\"addRedeemFeeExemptedTCO2(address)\":{\"notice\":\"Adds a new TCO2 for redeem fees exemption\"},\"addToExternalWhiteList(address[])\":{\"notice\":\"Function to whitelist selected external non-TCO2 contracts by their address\"},\"addToInternalBlackList(address[])\":{\"notice\":\"Function to blacklist certain TCO2 contracts by their address\"},\"addToInternalWhiteList(address[])\":{\"notice\":\"Function to whitelist certain TCO2 contracts by their address\"},\"bridgeBurn(address,uint256)\":{\"notice\":\"burn tokens from account to be cross-chain bridged\"},\"bridgeMint(address,uint256)\":{\"notice\":\"mint tokens to receiver account that were cross-chain bridged\"},\"calculateRedeemFees(address[],uint256[])\":{\"notice\":\"View function to calculate fees pre-execution\"},\"checkAttributeMatching(address)\":{\"notice\":\"Checks whether incoming TCO2s match the accepted criteria/attributes\"},\"checkEligible(address)\":{\"notice\":\"Checks if token to be deposited is eligible for this pool\"},\"deposit(address,uint256)\":{\"notice\":\"Deposit function for NCT pool that accepts TCO2s and mints NCT 1:1\"},\"pause()\":{\"notice\":\"Emergency function to disable contract's core functionality\"},\"redeemAndBurn(address,uint256)\":{\"notice\":\"Redeem a whitelisted TCO2 without paying any fees and burn the TCO2. Initially added to burn HFC-23 credits, can be used in the future to dispose of any other whitelisted credits.\"},\"redeemAuto(uint256)\":{\"notice\":\"Automatically redeems an amount of Pool tokens for underlying TCO2s from an array of ranked TCO2 contracts starting from contract at index 0 until amount is satisfied\"},\"redeemAuto2(uint256)\":{\"notice\":\"Automatically redeems an amount of Pool tokens for underlying TCO2s from an array of ranked TCO2 contracts starting from contract at index 0 until amount is satisfied. redeemAuto2 is slightly more expensive than redeemAuto but it is going to be more optimal to use by other on-chain contracts.\"},\"redeemFeeExemptedAddresses(address)\":{\"notice\":\"End users exempted from redeem fees\"},\"redeemFeeExemptedTCO2s(address)\":{\"notice\":\"TCO2s exempted from redeem fees\"},\"redeemMany(address[],uint256[])\":{\"notice\":\"Redeems Pool tokens for multiple underlying TCO2s 1:1 minus fees\"},\"removeFromExternalWhiteList(address[])\":{\"notice\":\"Function to remove ERC20 addresses from external whitelist\"},\"removeFromInternalBlackList(address[])\":{\"notice\":\"Function to remove TCO2 addresses from internal blacklist\"},\"removeFromInternalWhiteList(address[])\":{\"notice\":\"Function to remove TCO2 addresses from internal whitelist\"},\"removeRedeemFeeExemptedAddress(address)\":{\"notice\":\"Removes an address from redeem fees exemption\"},\"removeRedeemFeeExemptedTCO2(address)\":{\"notice\":\"Removes a TCO2 from redeem fees exemption\"},\"router()\":{\"notice\":\"bridge router who has access to the bridgeMint & bridgeBurn functions which mint/burn pool tokens for cross chain messenges\"},\"scoredTCO2s(uint256)\":{\"notice\":\"array used to read from when redeeming TCO2s automatically\"},\"setFeeRedeemBurnAddress(address)\":{\"notice\":\"Update the fee redeem burn address\"},\"setFeeRedeemBurnPercentage(uint256)\":{\"notice\":\"Update the fee redeem burn percentage\"},\"setFeeRedeemPercentage(uint256)\":{\"notice\":\"Update the fee redeem percentage\"},\"setFeeRedeemReceiver(address)\":{\"notice\":\"Update the fee redeem receiver\"},\"setMinimumVintageStartTime(uint64)\":{\"notice\":\"Determines the minimum vintage start time acceptance criteria of TCO2s\"},\"setRouter(address)\":{\"notice\":\"method to set router address\"},\"setSupplyCap(uint256)\":{\"notice\":\"Function to limit the maximum NCT supply\"},\"setTCO2Scoring(address[])\":{\"notice\":\"Allows MANAGERs or the owner to pass an array to hold TCO2 contract addesses that are ordered by some form of scoring mechanism\"},\"switchMapping(string,bool)\":{\"notice\":\"Generic function to switch attributes mappings into either acceptance or rejection criteria\"}},\"notice\":\"Nature Carbon Tonne (or NatureCarbonTonne) Contract is an ERC20 compliant token that acts as a pool for TCO2 tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pools/NCT.sol\":\"NatureCarbonTonne\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControlUpgradeable.sol\\\";\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../utils/StringsUpgradeable.sol\\\";\\nimport \\\"../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\\n    function __AccessControl_init() internal onlyInitializing {\\n    }\\n\\n    function __AccessControl_init_unchained() internal onlyInitializing {\\n    }\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        StringsUpgradeable.toHexString(uint160(account), 20),\\n                        \\\" is missing role \\\",\\n                        StringsUpgradeable.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x5addc7dca2366b164c9befa35da22e9081c44bf6c4c8dce4269be43516f8916e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControlUpgradeable {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            _functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            _functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {\\n        require(AddressUpgradeable.isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return AddressUpgradeable.verifyCallResult(success, returndata, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint8).max);\\n    }\\n\\n    function _setInitializedVersion(uint8 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate that the this implementation remains valid after an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function upgradeTo(address newImplementation) external virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x6e36e9b4b71de699c2f3f0d4e4d1aa0b35da99a26e8d5b91ef09ba234b4ef270\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xb71b875e7f1b8ad082eb6ff83bca4bfa7d050476cc98fd39295826b654edfb46\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x422c3d27d0d5681cea93acbb0dcb175fa5b461b5b7731da7ff77e51f0f0174c7\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary StringsUpgradeable {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x398d3323c1932a5986bf36be7c57593e121e69d5db5b6574b4ee0d031443de37\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165Upgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\"},\"contracts/CarbonOffsetBatchesTypes.sol\":{\"content\":\"// SPDX-FileCopyrightText: 2021 Toucan Labs\\n//\\n// SPDX-License-Identifier: UNLICENSED\\n\\n// If you encounter a vulnerability or an issue, please contact <security@toucan.earth> or visit security.toucan.earth\\n\\npragma solidity >=0.8.4 <=0.8.14;\\n\\nenum RetirementStatus {\\n    Pending, // 0\\n    Rejected, // 1\\n    Confirmed // 2\\n}\\n\",\"keccak256\":\"0x877b37b5479987325c92c56b1ba0157cafc83f60319217a97404405f1f8584d3\",\"license\":\"UNLICENSED\"},\"contracts/CarbonProjectTypes.sol\":{\"content\":\"// SPDX-FileCopyrightText: 2021 Toucan Labs\\n//\\n// SPDX-License-Identifier: UNLICENSED\\n\\n// If you encounter a vulnerability or an issue, please contact <security@toucan.earth> or visit security.toucan.earth\\n\\npragma solidity >=0.8.4 <=0.8.14;\\n\\n/// @dev CarbonProject related data and attributes\\nstruct ProjectData {\\n    string projectId;\\n    string standard;\\n    string methodology;\\n    string region;\\n    string storageMethod;\\n    string method;\\n    string emissionType;\\n    string category;\\n    string uri;\\n    address beneficiary;\\n}\\n\",\"keccak256\":\"0x55a4f94dabb6b7e962761480600afe83f8092c371ab03f9957f70db0674f521c\",\"license\":\"UNLICENSED\"},\"contracts/CarbonProjectVintageTypes.sol\":{\"content\":\"// SPDX-FileCopyrightText: 2021 Toucan Labs\\n//\\n// SPDX-License-Identifier: UNLICENSED\\n\\n// If you encounter a vulnerability or an issue, please contact <security@toucan.earth> or visit security.toucan.earth\\n\\npragma solidity >=0.8.4 <=0.8.14;\\n\\nstruct VintageData {\\n    /// @dev A human-readable string which differentiates this from other vintages in\\n    /// the same project, and helps build the corresponding TCO2 name and symbol.\\n    string name;\\n    uint64 startTime; // UNIX timestamp\\n    uint64 endTime; // UNIX timestamp\\n    uint256 projectTokenId;\\n    uint64 totalVintageQuantity;\\n    bool isCorsiaCompliant;\\n    bool isCCPcompliant;\\n    string coBenefits;\\n    string correspAdjustment;\\n    string additionalCertification;\\n    string uri;\\n}\\n\",\"keccak256\":\"0x42f65ddde0c116e226a53c1c377ad4c2187a0e4e6f94739c488f471a61c4c188\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/ICarbonOffsetBatches.sol\":{\"content\":\"// SPDX-FileCopyrightText: 2021 Toucan Labs\\n//\\n// SPDX-License-Identifier: UNLICENSED\\n\\n// If you encounter a vulnerability or an issue, please contact <security@toucan.earth> or visit security.toucan.earth\\npragma solidity >=0.8.4 <=0.8.14;\\n\\nimport '../CarbonOffsetBatchesTypes.sol';\\n\\ninterface ICarbonOffsetBatches {\\n    function getConfirmationStatus(uint256 tokenId)\\n        external\\n        view\\n        returns (RetirementStatus);\\n\\n    function getBatchNFTData(uint256 tokenId)\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            RetirementStatus\\n        );\\n}\\n\",\"keccak256\":\"0x4058734dfee71d4ced1c0563162f02e70f18e2eba244ea3e7250ed31ee637ff9\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IToucanCarbonOffsets.sol\":{\"content\":\"// SPDX-FileCopyrightText: 2022 Toucan Labs\\n//\\n// SPDX-License-Identifier: UNLICENSED\\n\\n// If you encounter a vulnerability or an issue, please contact <security@toucan.earth> or visit security.toucan.earth\\npragma solidity >=0.8.4 <=0.8.14;\\n\\nimport '../CarbonProjectVintageTypes.sol';\\nimport '../CarbonProjectTypes.sol';\\n\\ninterface IToucanCarbonOffsets {\\n    function burnFrom(address account, uint256 amount) external;\\n\\n    function getAttributes()\\n        external\\n        view\\n        returns (ProjectData memory, VintageData memory);\\n}\\n\",\"keccak256\":\"0xe4fc4213026d05f2038c482edcb0e973f87e9ec64ecdb9306022d16a2b033dc1\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IToucanContractRegistry.sol\":{\"content\":\"// SPDX-FileCopyrightText: 2021 Toucan Labs\\n//\\n// SPDX-License-Identifier: UNLICENSED\\n\\n// If you encounter a vulnerability or an issue, please contact <security@toucan.earth> or visit security.toucan.earth\\npragma solidity >=0.8.4 <=0.8.14;\\n\\ninterface IToucanContractRegistry {\\n    function carbonOffsetBatchesAddress() external view returns (address);\\n\\n    function carbonProjectsAddress() external view returns (address);\\n\\n    function carbonProjectVintagesAddress() external view returns (address);\\n\\n    function toucanCarbonOffsetsFactoryAddress()\\n        external\\n        view\\n        returns (address);\\n\\n    function carbonOffsetBadgesAddress() external view returns (address);\\n\\n    function checkERC20(address _address) external view returns (bool);\\n\\n    function addERC20(address _address) external;\\n}\\n\",\"keccak256\":\"0xda5dcf17e10d10292d12f0d6209ed67401d119b489749934c7096123059f1f07\",\"license\":\"UNLICENSED\"},\"contracts/pools/NCT.sol\":{\"content\":\"// SPDX-FileCopyrightText: 2021 Toucan Labs\\n//\\n// SPDX-License-Identifier: UNLICENSED\\n\\n// If you encounter a vulnerability or an issue, please contact <security@toucan.earth> or visit security.toucan.earth\\npragma solidity >=0.8.4 <=0.8.14;\\n\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol';\\n\\nimport '../interfaces/ICarbonOffsetBatches.sol';\\nimport '../interfaces/IToucanCarbonOffsets.sol';\\nimport '../interfaces/IToucanContractRegistry.sol';\\nimport './NCTStorage.sol';\\n\\n/// @notice Nature Carbon Tonne (or NatureCarbonTonne)\\n/// Contract is an ERC20 compliant token that acts as a pool for TCO2 tokens\\n//slither-disable-next-line unprotected-upgrade\\ncontract NatureCarbonTonne is\\n    ContextUpgradeable,\\n    ERC20Upgradeable,\\n    OwnableUpgradeable,\\n    PausableUpgradeable,\\n    AccessControlUpgradeable,\\n    UUPSUpgradeable,\\n    NatureCarbonTonneStorage\\n{\\n    using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n    // ----------------------------------------\\n    //      Constants\\n    // ----------------------------------------\\n\\n    bytes32 public constant PAUSER_ROLE = keccak256('PAUSER_ROLE');\\n    bytes32 public constant MANAGER_ROLE = keccak256('MANAGER_ROLE');\\n    /// @dev fees redeem percentage with 2 fixed decimals precision\\n    uint256 public constant feeRedeemDivider = 1e4;\\n\\n    // ----------------------------------------\\n    //      Events\\n    // ----------------------------------------\\n\\n    event Deposited(address erc20Addr, uint256 amount);\\n    event Redeemed(address account, address erc20, uint256 amount);\\n    event ExternalAddressWhitelisted(address erc20addr);\\n    event ExternalAddressRemovedFromWhitelist(address erc20addr);\\n    event InternalAddressWhitelisted(address erc20addr);\\n    event InternalAddressBlacklisted(address erc20addr);\\n    event InternalAddressRemovedFromBlackList(address erc20addr);\\n    event InternalAddressRemovedFromWhitelist(address erc20addr);\\n    event AttributeStandardAdded(string standard);\\n    event AttributeStandardRemoved(string standard);\\n    event AttributeMethodologyAdded(string methodology);\\n    event AttributeMethodologyRemoved(string methodology);\\n    event AttributeRegionAdded(string region);\\n    event AttributeRegionRemoved(string region);\\n    event RedeemFeePaid(address redeemer, uint256 fees);\\n    event RedeemFeeBurnt(address redeemer, uint256 fees);\\n    event ToucanRegistrySet(address ContractRegistry);\\n    event MappingSwitched(string mappingName, bool accepted);\\n    event SupplyCapUpdated(uint256 newCap);\\n    event MinimumVintageStartTimeUpdated(uint256 minimumVintageStartTime);\\n    event TCO2ScoringUpdated(address[] tco2s);\\n    event AddFeeExemptedTCO2(address tco2);\\n    event RemoveFeeExemptedTCO2(address tco2);\\n\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    // ----------------------------------------\\n    //      Upgradable related functions\\n    // ----------------------------------------\\n\\n    /// @dev Returns the current version of the smart contract\\n    function version() external pure virtual returns (string memory) {\\n        return '1.3.0';\\n    }\\n\\n    function initialize() external virtual initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n        __Pausable_init_unchained();\\n        __ERC20_init_unchained('Toucan Protocol: Nature Carbon Tonne', 'NCT');\\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation)\\n        internal\\n        virtual\\n        override\\n        onlyOwner\\n    {}\\n\\n    // ------------------------\\n    //      Admin functions\\n    // ------------------------\\n\\n    /// @dev modifier that only lets the contract's owner and granted role to execute\\n    modifier onlyWithRole(bytes32 role) {\\n        require(\\n            hasRole(role, msg.sender) || owner() == msg.sender,\\n            'Unauthorized'\\n        );\\n        _;\\n    }\\n\\n    /// @notice Emergency function to disable contract's core functionality\\n    /// @dev wraps _pause(), only Admin\\n    function pause() external virtual onlyWithRole(PAUSER_ROLE) {\\n        _pause();\\n    }\\n\\n    /// @dev Unpause the system, wraps _unpause(), only Admin\\n    function unpause() external virtual onlyWithRole(PAUSER_ROLE) {\\n        _unpause();\\n    }\\n\\n    function setToucanContractRegistry(address _address)\\n        external\\n        virtual\\n        onlyOwner\\n    {\\n        contractRegistry = _address;\\n        emit ToucanRegistrySet(_address);\\n    }\\n\\n    /// @notice Generic function to switch attributes mappings into either\\n    /// acceptance or rejection criteria\\n    /// @param _mappingName attribute mapping of project-vintage data\\n    /// @param accepted determines if mapping works as black or whitelist\\n    function switchMapping(string memory _mappingName, bool accepted)\\n        external\\n        virtual\\n        onlyOwner\\n    {\\n        if (strcmp(_mappingName, 'regions')) {\\n            accepted\\n                ? regionsIsAcceptedMapping = true\\n                : regionsIsAcceptedMapping = false;\\n        } else if (strcmp(_mappingName, 'standards')) {\\n            accepted\\n                ? standardsIsAcceptedMapping = true\\n                : standardsIsAcceptedMapping = false;\\n        } else if (strcmp(_mappingName, 'methodologies')) {\\n            accepted\\n                ? methodologiesIsAcceptedMapping = true\\n                : methodologiesIsAcceptedMapping = false;\\n        }\\n        emit MappingSwitched(_mappingName, accepted);\\n    }\\n\\n    /// @notice Function to add attributes for filtering (does not support complex AttributeSets)\\n    /// @param addToList determines whether attribute should be added or removed\\n    /// Other params are arrays of attributes to be added\\n    function addAttributes(\\n        bool addToList,\\n        string[] memory _regions,\\n        string[] memory _standards,\\n        string[] memory _methodologies\\n    ) external virtual onlyOwner {\\n        //slither-disable-next-line uninitialized-local\\n        for (uint256 i; i < _standards.length; ++i) {\\n            if (addToList == true) {\\n                standards[_standards[i]] = true;\\n                emit AttributeStandardAdded(_standards[i]);\\n            } else {\\n                standards[_standards[i]] = false;\\n                emit AttributeStandardRemoved(_standards[i]);\\n            }\\n        }\\n\\n        //slither-disable-next-line uninitialized-local\\n        for (uint256 i; i < _methodologies.length; ++i) {\\n            if (addToList == true) {\\n                methodologies[_methodologies[i]] = true;\\n                emit AttributeMethodologyAdded(_methodologies[i]);\\n            } else {\\n                methodologies[_methodologies[i]] = false;\\n                emit AttributeMethodologyRemoved(_methodologies[i]);\\n            }\\n        }\\n\\n        //slither-disable-next-line uninitialized-local\\n        for (uint256 i; i < _regions.length; ++i) {\\n            if (addToList == true) {\\n                regions[_regions[i]] = true;\\n                emit AttributeRegionAdded(_regions[i]);\\n            } else {\\n                regions[_regions[i]] = false;\\n                emit AttributeRegionRemoved(_regions[i]);\\n            }\\n        }\\n    }\\n\\n    /// @notice Function to whitelist selected external non-TCO2 contracts by their address\\n    /// @param erc20Addr accepts an array of contract addresses\\n    function addToExternalWhiteList(address[] memory erc20Addr)\\n        external\\n        onlyOwner\\n    {\\n        //slither-disable-next-line uninitialized-local\\n        for (uint256 i; i < erc20Addr.length; ++i) {\\n            externalWhiteList[erc20Addr[i]] = true;\\n            emit ExternalAddressWhitelisted(erc20Addr[i]);\\n        }\\n    }\\n\\n    /// @notice Function to whitelist certain TCO2 contracts by their address\\n    /// @param erc20Addr accepts an array of contract addresses\\n    function addToInternalWhiteList(address[] memory erc20Addr)\\n        external\\n        onlyOwner\\n    {\\n        //slither-disable-next-line uninitialized-local\\n        for (uint256 i; i < erc20Addr.length; ++i) {\\n            internalWhiteList[erc20Addr[i]] = true;\\n            emit InternalAddressWhitelisted(erc20Addr[i]);\\n        }\\n    }\\n\\n    /// @notice Function to blacklist certain TCO2 contracts by their address\\n    /// @param erc20Addr accepts an array of contract addresses\\n    function addToInternalBlackList(address[] memory erc20Addr)\\n        external\\n        onlyOwner\\n    {\\n        //slither-disable-next-line uninitialized-local\\n        for (uint256 i; i < erc20Addr.length; ++i) {\\n            internalBlackList[erc20Addr[i]] = true;\\n            emit InternalAddressBlacklisted(erc20Addr[i]);\\n        }\\n    }\\n\\n    /// @notice Function to remove ERC20 addresses from external whitelist\\n    /// @param erc20Addr accepts an array of contract addresses\\n    function removeFromExternalWhiteList(address[] memory erc20Addr)\\n        external\\n        onlyOwner\\n    {\\n        //slither-disable-next-line uninitialized-local\\n        for (uint256 i; i < erc20Addr.length; ++i) {\\n            externalWhiteList[erc20Addr[i]] = false;\\n            emit ExternalAddressRemovedFromWhitelist(erc20Addr[i]);\\n        }\\n    }\\n\\n    /// @notice Function to remove TCO2 addresses from internal blacklist\\n    /// @param erc20Addr accepts an array of contract addresses\\n    function removeFromInternalBlackList(address[] memory erc20Addr)\\n        external\\n        onlyOwner\\n    {\\n        //slither-disable-next-line uninitialized-local\\n        for (uint256 i; i < erc20Addr.length; ++i) {\\n            internalBlackList[erc20Addr[i]] = false;\\n            emit InternalAddressRemovedFromBlackList(erc20Addr[i]);\\n        }\\n    }\\n\\n    /// @notice Function to remove TCO2 addresses from internal whitelist\\n    /// @param erc20Addr accepts an array of contract addressesc\\n    function removeFromInternalWhiteList(address[] memory erc20Addr)\\n        external\\n        onlyOwner\\n    {\\n        //slither-disable-next-line uninitialized-local\\n        for (uint256 i; i < erc20Addr.length; ++i) {\\n            internalWhiteList[erc20Addr[i]] = false;\\n            emit InternalAddressRemovedFromWhitelist(erc20Addr[i]);\\n        }\\n    }\\n\\n    /// @notice Function to limit the maximum NCT supply\\n    /// @dev supplyCap is initially set to 0 and must be increased before deposits\\n    function setSupplyCap(uint256 newCap) external virtual onlyOwner {\\n        supplyCap = newCap;\\n        emit SupplyCapUpdated(newCap);\\n    }\\n\\n    /// @notice Determines the minimum vintage start time acceptance criteria of TCO2s\\n    /// @param _minimumVintageStartTime unix time format\\n    function setMinimumVintageStartTime(uint64 _minimumVintageStartTime)\\n        external\\n        virtual\\n        onlyOwner\\n    {\\n        minimumVintageStartTime = _minimumVintageStartTime;\\n        emit MinimumVintageStartTimeUpdated(_minimumVintageStartTime);\\n    }\\n\\n    /// @notice Allows MANAGERs or the owner to pass an array to hold TCO2 contract addesses that are\\n    /// ordered by some form of scoring mechanism\\n    /// @param tco2s array of ordered TCO2 addresses\\n    function setTCO2Scoring(address[] calldata tco2s)\\n        external\\n        onlyWithRole(MANAGER_ROLE)\\n    {\\n        require(tco2s.length > 0, '!tco2s');\\n        scoredTCO2s = tco2s;\\n        emit TCO2ScoringUpdated(tco2s);\\n    }\\n\\n    // ----------------------------\\n    //   Permissionless functions\\n    // ----------------------------\\n\\n    /// @notice Deposit function for NCT pool that accepts TCO2s and mints NCT 1:1\\n    /// @param erc20Addr ERC20 contract address to be deposited, requires approve\\n    /// @dev Eligibility is checked via `checkEligible`, balances are tracked\\n    /// for each TCO2 separately\\n    function deposit(address erc20Addr, uint256 amount)\\n        external\\n        virtual\\n        whenNotPaused\\n    {\\n        require(checkEligible(erc20Addr));\\n\\n        uint256 remainingSpace = getRemaining();\\n        require(remainingSpace > 0, 'Full pool');\\n\\n        if (amount > remainingSpace) amount = remainingSpace;\\n\\n        /// @dev Increase balance sheet of individual token\\n        tokenBalances[erc20Addr] += amount;\\n        _mint(msg.sender, amount);\\n        emit Deposited(erc20Addr, amount);\\n\\n        IERC20Upgradeable(erc20Addr).safeTransferFrom(\\n            msg.sender,\\n            address(this),\\n            amount\\n        );\\n    }\\n\\n    /// @notice Checks if token to be deposited is eligible for this pool\\n    function checkEligible(address erc20Addr)\\n        public\\n        view\\n        virtual\\n        returns (bool)\\n    {\\n        bool isToucanContract = IToucanContractRegistry(contractRegistry)\\n            .checkERC20(erc20Addr);\\n\\n        if (isToucanContract) {\\n            if (internalWhiteList[erc20Addr]) {\\n                return true;\\n            }\\n\\n            require(internalBlackList[erc20Addr] == false, 'Blacklisted TCO2');\\n\\n            require(checkAttributeMatching(erc20Addr) == true);\\n        }\\n        /// @dev If not Toucan native contract, check if address is whitelisted\\n        else {\\n            require(externalWhiteList[erc20Addr] == true, 'Not whitelisted');\\n            return true;\\n        }\\n\\n        return true;\\n    }\\n\\n    /// @notice Checks whether incoming TCO2s match the accepted criteria/attributes\\n    function checkAttributeMatching(address erc20Addr)\\n        public\\n        view\\n        virtual\\n        returns (bool)\\n    {\\n        ProjectData memory projectData;\\n        VintageData memory vintageData;\\n        (projectData, vintageData) = IToucanCarbonOffsets(erc20Addr)\\n            .getAttributes();\\n\\n        /// @dev checks if any one of the attributes are blacklisted.\\n        /// If mappings are set to \\\"whitelist\\\"-mode, require the opposite\\n        require(\\n            vintageData.startTime >= minimumVintageStartTime,\\n            'Start time too old'\\n        );\\n        require(\\n            regions[projectData.region] == regionsIsAcceptedMapping,\\n            'Region not accepted'\\n        );\\n        require(\\n            standards[projectData.standard] == standardsIsAcceptedMapping,\\n            'Standard not accepted'\\n        );\\n        require(\\n            methodologies[projectData.methodology] ==\\n                methodologiesIsAcceptedMapping,\\n            'Methodology not accepted'\\n        );\\n\\n        return true;\\n    }\\n\\n    /// @notice Update the fee redeem percentage\\n    /// @param _feeRedeemPercentageInBase percentage of fee in base\\n    function setFeeRedeemPercentage(uint256 _feeRedeemPercentageInBase)\\n        external\\n        virtual\\n        onlyOwner\\n    {\\n        require(\\n            _feeRedeemPercentageInBase < feeRedeemDivider,\\n            'Invalid fee percentage'\\n        );\\n        feeRedeemPercentageInBase = _feeRedeemPercentageInBase;\\n    }\\n\\n    /// @notice Update the fee redeem receiver\\n    /// @param _feeRedeemReceiver address to transfer the fees\\n    function setFeeRedeemReceiver(address _feeRedeemReceiver)\\n        external\\n        virtual\\n        onlyOwner\\n    {\\n        require(_feeRedeemReceiver != address(0), 'Invalid fee address');\\n        feeRedeemReceiver = _feeRedeemReceiver;\\n    }\\n\\n    /// @notice Update the fee redeem burn percentage\\n    /// @param _feeRedeemBurnPercentageInBase percentage of fee in base\\n    function setFeeRedeemBurnPercentage(uint256 _feeRedeemBurnPercentageInBase)\\n        external\\n        virtual\\n        onlyOwner\\n    {\\n        require(\\n            _feeRedeemBurnPercentageInBase < feeRedeemDivider,\\n            'Invalid burn percentage'\\n        );\\n        feeRedeemBurnPercentageInBase = _feeRedeemBurnPercentageInBase;\\n    }\\n\\n    /// @notice Update the fee redeem burn address\\n    /// @param _feeRedeemBurnAddress address to transfer the fees to burn\\n    function setFeeRedeemBurnAddress(address _feeRedeemBurnAddress)\\n        external\\n        virtual\\n        onlyOwner\\n    {\\n        require(_feeRedeemBurnAddress != address(0), 'Invalid burn address');\\n        feeRedeemBurnAddress = _feeRedeemBurnAddress;\\n    }\\n\\n    /// @notice Adds a new address for redeem fees exemption\\n    /// @param _address address to be exempted on redeem fees\\n    function addRedeemFeeExemptedAddress(address _address)\\n        external\\n        virtual\\n        onlyOwner\\n    {\\n        redeemFeeExemptedAddresses[_address] = true;\\n    }\\n\\n    /// @notice Removes an address from redeem fees exemption\\n    /// @param _address address to be removed from exemption\\n    function removeRedeemFeeExemptedAddress(address _address)\\n        external\\n        virtual\\n        onlyOwner\\n    {\\n        redeemFeeExemptedAddresses[_address] = false;\\n    }\\n\\n    /// @notice Adds a new TCO2 for redeem fees exemption\\n    /// @param _tco2 TCO2 to be exempted on redeem fees\\n    function addRedeemFeeExemptedTCO2(address _tco2)\\n        external\\n        virtual\\n        onlyOwner\\n    {\\n        redeemFeeExemptedTCO2s[_tco2] = true;\\n        emit AddFeeExemptedTCO2(_tco2);\\n    }\\n\\n    /// @notice Removes a TCO2 from redeem fees exemption\\n    /// @param _tco2 TCO2 to be removed from exemption\\n    function removeRedeemFeeExemptedTCO2(address _tco2)\\n        external\\n        virtual\\n        onlyOwner\\n    {\\n        redeemFeeExemptedTCO2s[_tco2] = false;\\n        emit RemoveFeeExemptedTCO2(_tco2);\\n    }\\n\\n    /// @notice View function to calculate fees pre-execution\\n    /// @dev User specifies in front-end the addresses and amounts they want\\n    /// @param tco2s Array of TCO2 contract addresses\\n    /// @param amounts Array of amounts to redeem for each tco2s\\n    /// @return Total fees amount\\n    function calculateRedeemFees(\\n        address[] memory tco2s,\\n        uint256[] memory amounts\\n    ) external view virtual whenNotPaused returns (uint256) {\\n        if (redeemFeeExemptedAddresses[msg.sender]) {\\n            return 0;\\n        }\\n        require(tco2s.length == amounts.length, 'Length of arrays differ');\\n\\n        //slither-disable-next-line uninitialized-local\\n        uint256 totalFee;\\n        uint256 _feeRedeemPercentageInBase = feeRedeemPercentageInBase;\\n\\n        //slither-disable-next-line uninitialized-local\\n        for (uint256 i; i < tco2s.length; ++i) {\\n            uint256 feeAmount = (amounts[i] * _feeRedeemPercentageInBase) /\\n                feeRedeemDivider;\\n            totalFee += feeAmount;\\n        }\\n        return totalFee;\\n    }\\n\\n    /// @notice Redeem a whitelisted TCO2 without paying any fees and burn\\n    /// the TCO2. Initially added to burn HFC-23 credits, can be used in the\\n    /// future to dispose of any other whitelisted credits.\\n    /// @dev User needs to approve the pool contract in the TCO2 contract for\\n    /// the amount to be burnt before executing this function.\\n    /// @param tco2 TCO2 to redeem and burn\\n    /// @param amount Amount to redeem and burn\\n    function redeemAndBurn(address tco2, uint256 amount)\\n        external\\n        whenNotPaused\\n    {\\n        require(redeemFeeExemptedTCO2s[tco2], 'Not exempted');\\n        redeemSingle(tco2, amount);\\n        // User has to approve the pool contract in the TCO2 contract\\n        // in order for this function to successfully burn the tokens\\n        IToucanCarbonOffsets(tco2).burnFrom(msg.sender, amount);\\n    }\\n\\n    /// @notice Redeems Pool tokens for multiple underlying TCO2s 1:1 minus fees\\n    /// @dev User specifies in front-end the addresses and amounts they want\\n    /// @param tco2s Array of TCO2 contract addresses\\n    /// @param amounts Array of amounts to redeem for each tco2s\\n    /// NCT Pool token in user's wallet get burned\\n    function redeemMany(address[] memory tco2s, uint256[] memory amounts)\\n        external\\n        virtual\\n        whenNotPaused\\n    {\\n        require(tco2s.length == amounts.length, 'Length of arrays differ');\\n\\n        //slither-disable-next-line uninitialized-local\\n        uint256 totalFee;\\n        uint256 _feeRedeemPercentageInBase = feeRedeemPercentageInBase;\\n        bool isExempted = redeemFeeExemptedAddresses[msg.sender];\\n\\n        //slither-disable-next-line uninitialized-local\\n        for (uint256 i; i < tco2s.length; ++i) {\\n            //slither-disable-next-line uninitialized-local\\n            uint256 feeAmount;\\n            if (!isExempted) {\\n                feeAmount =\\n                    (amounts[i] * _feeRedeemPercentageInBase) /\\n                    feeRedeemDivider;\\n                totalFee += feeAmount;\\n            }\\n            redeemSingle(tco2s[i], amounts[i] - feeAmount);\\n        }\\n        if (totalFee != 0) {\\n            uint256 burnAmount = (totalFee * feeRedeemBurnPercentageInBase) /\\n                feeRedeemDivider;\\n            totalFee -= burnAmount;\\n            transfer(feeRedeemReceiver, totalFee);\\n            emit RedeemFeePaid(msg.sender, totalFee);\\n            if (burnAmount > 0) {\\n                transfer(feeRedeemBurnAddress, burnAmount);\\n                emit RedeemFeeBurnt(msg.sender, burnAmount);\\n            }\\n        }\\n    }\\n\\n    /// @notice Automatically redeems an amount of Pool tokens for underlying\\n    /// TCO2s from an array of ranked TCO2 contracts\\n    /// starting from contract at index 0 until amount is satisfied\\n    /// @param amount Total amount to be redeemed\\n    /// @dev NCT Pool tokens in user's wallet get burned\\n    function redeemAuto(uint256 amount) external virtual whenNotPaused {\\n        require(amount <= totalSupply(), 'Amount exceeds totalSupply');\\n        uint256 remainingAmount = amount;\\n        //slither-disable-next-line uninitialized-local\\n        uint256 i;\\n\\n        uint256 scoredTCO2Len = scoredTCO2s.length;\\n        while (remainingAmount > 0 && i < scoredTCO2Len) {\\n            address tco2 = scoredTCO2s[i];\\n            uint256 balance = tokenBalances[tco2];\\n\\n            // Only TCO2s with a balance should be included for a redemption.\\n            if (balance != 0) {\\n                uint256 amountToRedeem = remainingAmount > balance\\n                    ? balance\\n                    : remainingAmount;\\n                redeemSingle(tco2, amountToRedeem);\\n                remainingAmount -= amountToRedeem;\\n            }\\n\\n            unchecked {\\n                i += 1;\\n            }\\n        }\\n\\n        require(remainingAmount == 0, 'Non-zero remaining amount');\\n    }\\n\\n    /// @notice Automatically redeems an amount of Pool tokens for underlying\\n    /// TCO2s from an array of ranked TCO2 contracts starting from contract at\\n    /// index 0 until amount is satisfied. redeemAuto2 is slightly more expensive\\n    /// than redeemAuto but it is going to be more optimal to use by other on-chain\\n    /// contracts.\\n    /// @param amount Total amount to be redeemed\\n    /// @return tco2s amounts The addresses and amounts of the TCO2s that were\\n    /// automatically redeemed\\n    function redeemAuto2(uint256 amount)\\n        external\\n        virtual\\n        whenNotPaused\\n        returns (address[] memory tco2s, uint256[] memory amounts)\\n    {\\n        require(amount <= totalSupply(), 'Amount exceeds totalSupply');\\n        uint256 remainingAmount = amount;\\n        //slither-disable-next-line uninitialized-local\\n        uint256 i;\\n\\n        uint256 scoredTCO2Len = scoredTCO2s.length;\\n        while (remainingAmount > 0 && i < scoredTCO2Len) {\\n            address tco2 = scoredTCO2s[i];\\n            uint256 balance = tokenBalances[tco2];\\n            //slither-disable-next-line uninitialized-local\\n            uint256 amountToRedeem;\\n\\n            // Only TCO2s with a balance should be included for a redemption.\\n            if (balance != 0) {\\n                amountToRedeem = remainingAmount > balance\\n                    ? balance\\n                    : remainingAmount;\\n                remainingAmount -= amountToRedeem;\\n            }\\n\\n            unchecked {\\n                i += 1;\\n            }\\n\\n            // Create return arrays statically since Solidity does not\\n            // support dynamic arrays or mappings in-memory (EIP-1153).\\n            // Do it here to avoid having to fill out the last indexes\\n            // during the second iteration.\\n            if (remainingAmount == 0) {\\n                tco2s = new address[](i);\\n                amounts = new uint256[](i);\\n\\n                tco2s[i - 1] = tco2;\\n                amounts[i - 1] = amountToRedeem;\\n                redeemSingle(tco2, amountToRedeem);\\n            }\\n        }\\n\\n        require(remainingAmount == 0, 'Non-zero remaining amount');\\n\\n        // Execute the second iteration by avoiding to run the last index\\n        // since we have already executed that in the first iteration.\\n        //slither-disable-next-line uninitialized-local\\n        for (uint256 j; j < i - 1; ++j) {\\n            address tco2 = scoredTCO2s[j];\\n            // This second loop only gets called when the `remainingAmount` is larger\\n            // than the first tco2 balance in the array. Here, in every iteration the\\n            // tco2 balance is smaller than the remaining amount while the last bit of\\n            // the `remainingAmount` which is smaller than the tco2 balance, got redeemed\\n            // in the first loop.\\n            uint256 balance = tokenBalances[tco2];\\n\\n            // Ignore empty balances so we don't generate redundant transactions.\\n            if (balance == 0) continue;\\n\\n            tco2s[j] = tco2;\\n            amounts[j] = balance;\\n            redeemSingle(tco2, balance);\\n        }\\n    }\\n\\n    /// @dev Internal function that redeems a single underlying token\\n    function redeemSingle(address erc20, uint256 amount)\\n        internal\\n        virtual\\n        whenNotPaused\\n    {\\n        require(tokenBalances[erc20] >= amount, 'Amount exceeds supply');\\n        _burn(msg.sender, amount);\\n        tokenBalances[erc20] -= amount;\\n        IERC20Upgradeable(erc20).safeTransfer(msg.sender, amount);\\n        emit Redeemed(msg.sender, erc20, amount);\\n    }\\n\\n    /// @dev Implemented in order to disable transfers when paused\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, amount);\\n\\n        require(!paused(), 'Paused contract');\\n    }\\n\\n    /// @dev Returns the remaining space in pool before hitting the cap\\n    function getRemaining() public view returns (uint256) {\\n        return (supplyCap - totalSupply());\\n    }\\n\\n    /**\\n     * @notice method to set router address\\n     * @dev use this method to set router address\\n     * @param _router address of ToucanCrosschainMessenger\\n     */\\n    function setRouter(address _router) external onlyOwner {\\n        // router address can be set to zero to make bridgeMint and bridgeBurn unusable\\n        router = _router;\\n    }\\n\\n    // -------------------------------------\\n    //   ToucanCrosschainMessenger functions\\n    // -------------------------------------\\n\\n    modifier onlyRouter() {\\n        require(msg.sender == router, 'Only Router functionality');\\n        _;\\n    }\\n\\n    /**\\n     * @notice mint tokens to receiver account that were cross-chain bridged\\n     * @dev invoked only by the ToucanCrosschainMessenger (Router)\\n     * @param _account account that will be minted with corss-chain bridged tokens\\n     * @param _amount amount of tokens that will be minted\\n     */\\n    function bridgeMint(address _account, uint256 _amount) external onlyRouter {\\n        _mint(_account, _amount);\\n    }\\n\\n    /**\\n     * @notice burn tokens from account to be cross-chain bridged\\n     * @dev invoked only by the ToucanCrosschainMessenger (Router)\\n     * @param _account account that will be burned with corss-chain bridged tokens\\n     * @param _amount amount of tokens that will be burned\\n     */\\n    function bridgeBurn(address _account, uint256 _amount) external onlyRouter {\\n        _burn(_account, _amount);\\n    }\\n\\n    // -----------------------------\\n    //      Locked ERC20 safety\\n    // -----------------------------\\n\\n    /// @dev Modifier to disallowing sending tokens to either the 0-address\\n    /// or this contract itself\\n    modifier validDestination(address to) {\\n        require(to != address(0x0));\\n        require(to != address(this));\\n        _;\\n    }\\n\\n    function transfer(address recipient, uint256 amount)\\n        public\\n        virtual\\n        override\\n        validDestination(recipient)\\n        returns (bool)\\n    {\\n        super.transfer(recipient, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override validDestination(recipient) returns (bool) {\\n        super.transferFrom(sender, recipient, amount);\\n        return true;\\n    }\\n\\n    // -----------------------------\\n    //      Helper Functions\\n    // -----------------------------\\n    function memcmp(bytes memory a, bytes memory b)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        return (a.length == b.length) && (keccak256(a) == keccak256(b));\\n    }\\n\\n    function strcmp(string memory a, string memory b)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        return memcmp(bytes(a), bytes(b));\\n    }\\n\\n    function getScoredTCO2s() external view returns (address[] memory) {\\n        return scoredTCO2s;\\n    }\\n}\\n\",\"keccak256\":\"0x401e29ef5bb78e7b3b302989141dc81a0c13b5829a56566a9208ab56c707d3c4\",\"license\":\"UNLICENSED\"},\"contracts/pools/NCTStorage.sol\":{\"content\":\"// SPDX-FileCopyrightText: 2021 Toucan Labs\\n//\\n// SPDX-License-Identifier: UNLICENSED\\n\\n// If you encounter a vulnerability or an issue, please contact <security@toucan.earth> or visit security.toucan.earth\\npragma solidity >=0.8.4 <=0.8.14;\\n\\n/// @dev Storage for the UUPS Proxy upgradable NCT contract\\nabstract contract NatureCarbonTonneStorageV1 {\\n    uint256 public supplyCap;\\n    mapping(address => uint256) public tokenBalances;\\n    address public contractRegistry;\\n\\n    /// @notice array used to read from when redeeming TCO2s automatically\\n    address[] public scoredTCO2s;\\n\\n    /// @dev Mappings for attributes that can be included or excluded\\n    /// if set to `false`, attribute-values are blacklisted/rejected\\n    /// if set to `true`, attribute-values are whitelisted/accepted\\n    mapping(string => bool) public regions;\\n    mapping(string => bool) public standards;\\n    mapping(string => bool) public methodologies;\\n\\n    /// @dev mapping to whitelist external non-TCO2 contracts by address\\n    mapping(address => bool) public externalWhiteList;\\n\\n    /// @dev mapping to include certain TCO2 contracts by address,\\n    /// overriding attribute matching checks\\n    mapping(address => bool) public internalWhiteList;\\n\\n    /// @dev mapping to exclude certain TCO2 contracts by address,\\n    /// even if the attribute matching would pass\\n    mapping(address => bool) public internalBlackList;\\n\\n    /// @dev fees redeem receiver address\\n    address public feeRedeemReceiver;\\n\\n    uint256 public feeRedeemPercentageInBase;\\n\\n    /// @dev fees redeem burn address\\n    address public feeRedeemBurnAddress;\\n\\n    /// @dev fees redeem burn percentage with 2 fixed decimals precision\\n    uint256 public feeRedeemBurnPercentageInBase;\\n\\n    /// @dev repacked smaller variables here so new bools can be added below\\n    uint64 public minimumVintageStartTime;\\n    //slither-disable-next-line constable-states\\n    bool public seedMode;\\n    bool public regionsIsAcceptedMapping;\\n    bool public standardsIsAcceptedMapping;\\n    bool public methodologiesIsAcceptedMapping;\\n}\\n\\nabstract contract NatureCarbonTonneStorageV1_1 {\\n    /// @notice End users exempted from redeem fees\\n    mapping(address => bool) public redeemFeeExemptedAddresses;\\n}\\n\\nabstract contract NatureCarbonTonneStorageV1_2 {\\n    /// @notice TCO2s exempted from redeem fees\\n    mapping(address => bool) public redeemFeeExemptedTCO2s;\\n}\\n\\nabstract contract NatureCarbonTonneStorageV1_3 {\\n    /// @notice bridge router who has access to the bridgeMint & bridgeBurn functions which\\n    /// mint/burn pool tokens for cross chain messenges\\n    address public router;\\n}\\n\\nabstract contract NatureCarbonTonneStorage is\\n    NatureCarbonTonneStorageV1,\\n    NatureCarbonTonneStorageV1_1,\\n    NatureCarbonTonneStorageV1_2,\\n    NatureCarbonTonneStorageV1_3\\n{}\\n\",\"keccak256\":\"0xc2fbdf3606cf1700965475bfce11489e5cb2f08d14874fd938452b70837ac9e3\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b62000156565b6200003260ff62000035565b50565b60008054610100900460ff1615620000ce578160ff1660011480156200006e57506200006c306200014760201b62003ab61760201c565b155b620000c65760405162461bcd60e51b815260206004820152602e60248201526000805160206200605183398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff8084169116106200012d5760405162461bcd60e51b815260206004820152602e60248201526000805160206200605183398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620000bd565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b608051615ec36200018e600039600081816116b2015281816116f20152818161204e0152818161208e015261211d0152615ec36000f3fe6080604052600436106104c05760003560e01c80638456cb5911610276578063c0d786551161014f578063e63ab1e9116100c1578063f138ac1611610085578063f138ac1614610f7e578063f141b84f14610faf578063f2fde38b14610fd1578063f3edb9ec14610ff1578063f75991cd1461102d578063f887ea401461106957600080fd5b8063e63ab1e914610ea5578063e882e37b14610ed9578063e9d131ad14610ef9578063ec87621c14610f19578063f06f510314610f4d57600080fd5b8063d80e05aa11610113578063d80e05aa14610df8578063dc5f560e14610e18578063dd62ed3e14610e38578063dff0f52314610e58578063e07f744c14610e6f578063e0d7cad914610e8f57600080fd5b8063c0d7865514610d5f578063c36a257314610d7f578063d4e457ec14610da1578063d547741f14610dc3578063d6a022b814610de357600080fd5b8063a1631e4b116101e8578063a9a484c5116101ac578063a9a484c514610c9c578063abf410e514610cbc578063b516f8cf14610cdd578063b6a3f59a14610cfd578063bbe669eb14610d1d578063bf2f870f14610d3d57600080fd5b8063a1631e4b14610bf7578063a217fddf14610c30578063a457c2d714610c45578063a7381a6414610c65578063a9059cbb14610c7c57600080fd5b80638da5cb5b1161023a5780638da5cb5b14610b4d5780638dcb01ec14610b6b5780638f770ad014610b8b57806391d1485414610ba257806395d89b4114610bc2578063963ff55e14610bd757600080fd5b80638456cb5914610a9c5780638662522f14610ab157806388c9cf6e14610aed57806389022e2e14610b0d5780638c2a993e14610b2d57600080fd5b80633f4ba83a116103a85780635c975abb1161031a578063715018a6116102de578063715018a6146109f257806374f4f54714610a0757806379255ddd14610a275780637966529d14610a475780638129fc1c14610a6757806381e48e9014610a7c57600080fd5b80635c975abb146109335780635db44cef1461094b5780636dbb31021461096b5780636fd2f1811461098b57806370a08231146109bc57600080fd5b80634c02cad11161036c5780634c02cad1146108615780634f1ef2861461088f578063523fba7f146108a257806352d1902d146108d057806354c9c970146108e557806354fd4d501461090557600080fd5b80633f4ba83a146107cc57806341dbbb2a146107e15780634642547b1461080157806346518b0a1461082157806347e7ef241461084157600080fd5b806324adbf4d11610441578063313ce56711610405578063313ce5671461070f57806336568abe1461072b5780633659cfe61461074b578063395093511461076b57806339cd7a8a1461078b5780633a9a77ee146107ab57600080fd5b806324adbf4d1461063e57806329f4c7a3146106775780632b540f191461069e5780632b554142146106cf5780632f2ff15d146106ef57600080fd5b80630e2d15ab116104885780630e2d15ab1461057e57806318160ddd146105af57806320b167f9146105ce57806323b872dd146105ee578063248a9ca31461060e57600080fd5b806301ffc9a7146104c557806306fdde03146104fa578063095ea7b31461051c5780630b7d28c71461053c5780630c0efecc1461055e575b600080fd5b3480156104d157600080fd5b506104e56104e0366004614f38565b61108a565b60405190151581526020015b60405180910390f35b34801561050657600080fd5b5061050f6110c1565b6040516104f19190614fba565b34801561052857600080fd5b506104e5610537366004614fe2565b611153565b34801561054857600080fd5b5061055c61055736600461500e565b61116b565b005b34801561056a57600080fd5b5061055c610579366004615040565b6111c3565b34801561058a57600080fd5b506104e561059936600461500e565b6101a06020526000908152604090205460ff1681565b3480156105bb57600080fd5b506035545b6040519081526020016104f1565b3480156105da57600080fd5b5061055c6105e936600461505d565b611244565b3480156105fa57600080fd5b506104e5610609366004615076565b6113a4565b34801561061a57600080fd5b506105c061062936600461505d565b600090815260fb602052604090206001015490565b34801561064a57600080fd5b5061019b5461065f906001600160a01b031681565b6040516001600160a01b0390911681526020016104f1565b34801561068357600080fd5b5061019f546104e59068010000000000000000900460ff1681565b3480156106aa57600080fd5b506104e56106b936600461500e565b6101a16020526000908152604090205460ff1681565b3480156106db57600080fd5b5061055c6106ea3660046151e0565b6113e6565b3480156106fb57600080fd5b5061055c61070a36600461529a565b611600565b34801561071b57600080fd5b50604051601281526020016104f1565b34801561073757600080fd5b5061055c61074636600461529a565b61162a565b34801561075757600080fd5b5061055c61076636600461500e565b6116a8565b34801561077757600080fd5b506104e5610786366004614fe2565b611787565b34801561079757600080fd5b5061055c6107a6366004615358565b6117a9565b3480156107b757600080fd5b5061019d5461065f906001600160a01b031681565b3480156107d857600080fd5b5061055c61193f565b3480156107ed57600080fd5b506105c06107fc3660046151e0565b6119b2565b34801561080d57600080fd5b5061055c61081c36600461500e565b611ab9565b34801561082d57600080fd5b5061055c61083c36600461539e565b611b05565b34801561084d57600080fd5b5061055c61085c366004614fe2565b611c02565b34801561086d57600080fd5b5061088161087c36600461505d565b611d1b565b6040516104f1929190615416565b61055c61089d36600461546d565b612044565b3480156108ae57600080fd5b506105c06108bd36600461500e565b6101926020526000908152604090205481565b3480156108dc57600080fd5b506105c0612110565b3480156108f157600080fd5b5061055c61090036600461539e565b6121c3565b34801561091157600080fd5b506040805180820190915260058152640312e332e360dc1b602082015261050f565b34801561093f57600080fd5b5060975460ff166104e5565b34801561095757600080fd5b5061055c61096636600461539e565b6122c0565b34801561097757600080fd5b5061055c61098636600461500e565b6123bd565b34801561099757600080fd5b506104e56109a636600461500e565b6101986020526000908152604090205460ff1681565b3480156109c857600080fd5b506105c06109d736600461500e565b6001600160a01b031660009081526033602052604090205490565b3480156109fe57600080fd5b5061055c61243c565b348015610a1357600080fd5b5061055c610a22366004614fe2565b612472565b348015610a3357600080fd5b5061055c610a4236600461505d565b6124d3565b348015610a5357600080fd5b5061055c610a6236600461539e565b612554565b348015610a7357600080fd5b5061055c612651565b348015610a8857600080fd5b5061055c610a9736600461554f565b612717565b348015610aa857600080fd5b5061055c612b8d565b348015610abd57600080fd5b506104e5610acc3660046155e9565b80516020818301810180516101958252928201919093012091525460ff1681565b348015610af957600080fd5b5061055c610b0836600461539e565b612c00565b348015610b1957600080fd5b5061055c610b28366004614fe2565b612cfd565b348015610b3957600080fd5b5061055c610b48366004614fe2565b612dde565b348015610b5957600080fd5b506065546001600160a01b031661065f565b348015610b7757600080fd5b5061055c610b8636600461539e565b612e3f565b348015610b9757600080fd5b506105c06101915481565b348015610bae57600080fd5b506104e5610bbd36600461529a565b612f3c565b348015610bce57600080fd5b5061050f612f67565b348015610be357600080fd5b5061065f610bf236600461505d565b612f76565b348015610c0357600080fd5b5061019f54610c18906001600160401b031681565b6040516001600160401b0390911681526020016104f1565b348015610c3c57600080fd5b506105c0600081565b348015610c5157600080fd5b506104e5610c60366004614fe2565b612fa1565b348015610c7157600080fd5b506105c061019e5481565b348015610c8857600080fd5b506104e5610c97366004614fe2565b613027565b348015610ca857600080fd5b506104e5610cb736600461500e565b61305c565b348015610cc857600080fd5b506101935461065f906001600160a01b031681565b348015610ce957600080fd5b5061055c610cf836600461500e565b61338a565b348015610d0957600080fd5b5061055c610d1836600461505d565b613423565b348015610d2957600080fd5b5061055c610d3836600461561d565b613483565b348015610d4957600080fd5b50610d52613570565b6040516104f19190615691565b348015610d6b57600080fd5b5061055c610d7a36600461500e565b6135d2565b348015610d8b57600080fd5b5061019f546104e590600160501b900460ff1681565b348015610dad57600080fd5b5061019f546104e590600160581b900460ff1681565b348015610dcf57600080fd5b5061055c610dde36600461529a565b61361f565b348015610def57600080fd5b506105c0613644565b348015610e0457600080fd5b5061055c610e1336600461500e565b613662565b348015610e2457600080fd5b506104e5610e3336600461500e565b6136de565b348015610e4457600080fd5b506105c0610e533660046156a4565b613866565b348015610e6457600080fd5b506105c061019c5481565b348015610e7b57600080fd5b5061055c610e8a36600461500e565b613891565b348015610e9b57600080fd5b506105c061271081565b348015610eb157600080fd5b506105c07f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b348015610ee557600080fd5b5061055c610ef436600461500e565b61392b565b348015610f0557600080fd5b5061055c610f1436600461505d565b6139a4565b348015610f2557600080fd5b506105c07f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b348015610f5957600080fd5b506104e5610f6836600461500e565b61019a6020526000908152604090205460ff1681565b348015610f8a57600080fd5b506104e5610f9936600461500e565b6101996020526000908152604090205460ff1681565b348015610fbb57600080fd5b5061019f546104e590600160481b900460ff1681565b348015610fdd57600080fd5b5061055c610fec36600461500e565b613a1e565b348015610ffd57600080fd5b506104e561100c3660046155e9565b80516020818301810180516101968252928201919093012091525460ff1681565b34801561103957600080fd5b506104e56110483660046155e9565b80516020818301810180516101978252928201919093012091525460ff1681565b34801561107557600080fd5b506101a25461065f906001600160a01b031681565b60006001600160e01b03198216637965db0b60e01b14806110bb57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060603680546110d0906156d2565b80601f01602080910402602001604051908101604052809291908181526020018280546110fc906156d2565b80156111495780601f1061111e57610100808354040283529160200191611149565b820191906000526020600020905b81548152906001019060200180831161112c57829003601f168201915b5050505050905090565b600033611161818585613ac5565b5060019392505050565b6065546001600160a01b0316331461119e5760405162461bcd60e51b81526004016111959061570c565b60405180910390fd5b6001600160a01b031660009081526101a060205260409020805460ff19166001179055565b6065546001600160a01b031633146111ed5760405162461bcd60e51b81526004016111959061570c565b61019f805467ffffffffffffffff19166001600160401b0383169081179091556040519081527f87f670402a6c72fff3b60ba5223165f062b58d671871fc2c49ea96101fdd19a0906020015b60405180910390a150565b60975460ff16156112675760405162461bcd60e51b815260040161119590615741565b6035548111156112b95760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e74206578636565647320746f74616c537570706c790000000000006044820152606401611195565b6101945481906000905b6000831180156112d257508082105b1561135457600061019483815481106112ed576112ed61576b565b60009182526020808320909101546001600160a01b0316808352610192909152604090912054909150801561134757600081861161132b578561132d565b815b90506113398382613be9565b6113438187615797565b9550505b60018401935050506112c3565b821561139e5760405162461bcd60e51b8152602060048201526019602482015278139bdb8b5e995c9bc81c995b585a5b9a5b99c8185b5bdd5b9d603a1b6044820152606401611195565b50505050565b6000826001600160a01b0381166113ba57600080fd5b306001600160a01b038216036113cf57600080fd5b6113da858585613d00565b50600195945050505050565b60975460ff16156114095760405162461bcd60e51b815260040161119590615741565b80518251146114545760405162461bcd60e51b81526020600482015260176024820152762632b733ba341037b31030b93930bcb9903234b33332b960491b6044820152606401611195565b61019c543360009081526101a0602052604081205490919060ff16825b855181101561151a576000826114c257612710848784815181106114975761149761576b565b60200260200101516114a991906157ae565b6114b391906157cd565b90506114bf81866157ef565b94505b6115098783815181106114d7576114d761576b565b6020026020010151828885815181106114f2576114f261576b565b60200260200101516115049190615797565b613be9565b5061151381615807565b9050611471565b5082156115f957600061271061019e548561153591906157ae565b61153f91906157cd565b905061154b8185615797565b61019b54909450611565906001600160a01b031685613027565b5060408051338152602081018690527f3f89e1d936a29a8de9ae9040436992721a00bc63bbe3ca55692b95f0311640b2910160405180910390a180156115f75761019d546115bc906001600160a01b031682613027565b5060408051338152602081018390527f932bd968974f0b6fa1cb59bf961f81d2e57b39332d311b413dceae17966387db910160405180910390a15b505b5050505050565b600082815260fb602052604090206001015461161b81613d26565b6116258383613d30565b505050565b6001600160a01b038116331461169a5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401611195565b6116a48282613db6565b5050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036116f05760405162461bcd60e51b815260040161119590615820565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611739600080516020615e23833981519152546001600160a01b031690565b6001600160a01b03161461175f5760405162461bcd60e51b81526004016111959061586c565b61176881613e1d565b6040805160008082526020820190925261178491839190613e47565b50565b60003361116181858561179a8383613866565b6117a491906157ef565b613ac5565b6065546001600160a01b031633146117d35760405162461bcd60e51b81526004016111959061570c565b6117fc8260405180604001604052806007815260200166726567696f6e7360c81b815250613fb2565b15611838578061181b5761019f805460ff60481b191690556000611832565b61019f805460ff60481b1916600160481b17905560015b50611902565b61186382604051806040016040528060098152602001687374616e646172647360b81b815250613fb2565b1561189b57806118825761019f805460ff60501b191690556000611832565b61019f805460ff60501b1916600160501b179055611902565b6118ca826040518060400160405280600d81526020016c6d6574686f646f6c6f6769657360981b815250613fb2565b1561190257806118e95761019f805460ff60581b191690556000611900565b61019f805460ff60581b1916600160581b17905560015b505b7fcdc35455a1217219a4240bb18a7d2978eb98208f22f7ec36d6a1381c28f9d0f582826040516119339291906158b8565b60405180910390a15050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61196a8133612f3c565b8061198e5750336119836065546001600160a01b031690565b6001600160a01b0316145b6119aa5760405162461bcd60e51b8152600401611195906158dc565b611784613fbe565b60006119c060975460ff1690565b156119dd5760405162461bcd60e51b815260040161119590615741565b3360009081526101a0602052604090205460ff16156119fe575060006110bb565b8151835114611a495760405162461bcd60e51b81526020600482015260176024820152762632b733ba341037b31030b93930bcb9903234b33332b960491b6044820152606401611195565b61019c54600090815b8551811015611aaf57600061271083878481518110611a7357611a7361576b565b6020026020010151611a8591906157ae565b611a8f91906157cd565b9050611a9b81856157ef565b93505080611aa890615807565b9050611a52565b5090949350505050565b6065546001600160a01b03163314611ae35760405162461bcd60e51b81526004016111959061570c565b6001600160a01b031660009081526101a060205260409020805460ff19169055565b6065546001600160a01b03163314611b2f5760405162461bcd60e51b81526004016111959061570c565b60005b81518110156116a45760016101986000848481518110611b5457611b5461576b565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507f29b8b184f4394a88477750516a3701dd0c9409451be78c24428bf5f827f527a5828281518110611bc657611bc661576b565b6020026020010151604051611bea91906001600160a01b0391909116815260200190565b60405180910390a1611bfb81615807565b9050611b32565b60975460ff1615611c255760405162461bcd60e51b815260040161119590615741565b611c2e826136de565b611c3757600080fd5b6000611c41613644565b905060008111611c7f5760405162461bcd60e51b8152602060048201526009602482015268119d5b1b081c1bdbdb60ba1b6044820152606401611195565b80821115611c8b578091505b6001600160a01b0383166000908152610192602052604081208054849290611cb49084906157ef565b90915550611cc490503383614051565b604080516001600160a01b0385168152602081018490527f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4910160405180910390a16116256001600160a01b03841633308561413c565b606080611d2a60975460ff1690565b15611d475760405162461bcd60e51b815260040161119590615741565b603554831115611d995760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e74206578636565647320746f74616c537570706c790000000000006044820152606401611195565b6101945483906000905b600083118015611db257508082105b15611f205760006101948381548110611dcd57611dcd61576b565b60009182526020808320909101546001600160a01b03168083526101929091526040822054909250908115611e1a57818611611e095785611e0b565b815b9050611e178187615797565b95505b60018501945085600003611f1857846001600160401b03811115611e4057611e406150b7565b604051908082528060200260200182016040528015611e69578160200160208202803683370190505b509750846001600160401b03811115611e8457611e846150b7565b604051908082528060200260200182016040528015611ead578160200160208202803683370190505b5096508288611ebd600188615797565b81518110611ecd57611ecd61576b565b6001600160a01b03909216602092830291909101909101528087611ef2600188615797565b81518110611f0257611f0261576b565b602002602001018181525050611f188382613be9565b505050611da3565b8215611f6a5760405162461bcd60e51b8152602060048201526019602482015278139bdb8b5e995c9bc81c995b585a5b9a5b99c8185b5bdd5b9d603a1b6044820152606401611195565b60005b611f78600184615797565b81101561203b5760006101948281548110611f9557611f9561576b565b60009182526020808320909101546001600160a01b0316808352610192909152604082205490925090819003611fcc57505061202b565b81888481518110611fdf57611fdf61576b565b60200260200101906001600160a01b031690816001600160a01b031681525050808784815181106120125761201261576b565b6020026020010181815250506120288282613be9565b50505b61203481615807565b9050611f6d565b50505050915091565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361208c5760405162461bcd60e51b815260040161119590615820565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166120d5600080516020615e23833981519152546001600160a01b031690565b6001600160a01b0316146120fb5760405162461bcd60e51b81526004016111959061586c565b61210482613e1d565b6116a482826001613e47565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146121b05760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401611195565b50600080516020615e2383398151915290565b6065546001600160a01b031633146121ed5760405162461bcd60e51b81526004016111959061570c565b60005b81518110156116a457600161019a60008484815181106122125761221261576b565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507f43388d274033333ceb567d699874be067ce7411c2bfc989f8e623694c9b3284f8282815181106122845761228461576b565b60200260200101516040516122a891906001600160a01b0391909116815260200190565b60405180910390a16122b981615807565b90506121f0565b6065546001600160a01b031633146122ea5760405162461bcd60e51b81526004016111959061570c565b60005b81518110156116a457600061019a600084848151811061230f5761230f61576b565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507fa7f25a7a7bea0a3fabbe5dc8b6176bd9a603925da390010a10998148c192b6708282815181106123815761238161576b565b60200260200101516040516123a591906001600160a01b0391909116815260200190565b60405180910390a16123b681615807565b90506122ed565b6065546001600160a01b031633146123e75760405162461bcd60e51b81526004016111959061570c565b6001600160a01b03811660008181526101a16020908152604091829020805460ff1916600117905590519182527fbfe78aa03afab7296923112293cb902a2fe6df5a6d3d81e1933c652c4cf860f49101611239565b6065546001600160a01b031633146124665760405162461bcd60e51b81526004016111959061570c565b61247060006141a7565b565b6101a2546001600160a01b031633146124c95760405162461bcd60e51b81526020600482015260196024820152784f6e6c7920526f757465722066756e6374696f6e616c69747960381b6044820152606401611195565b6116a482826141f9565b6065546001600160a01b031633146124fd5760405162461bcd60e51b81526004016111959061570c565b612710811061254e5760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206275726e2070657263656e746167650000000000000000006044820152606401611195565b61019e55565b6065546001600160a01b0316331461257e5760405162461bcd60e51b81526004016111959061570c565b60005b81518110156116a457600061019860008484815181106125a3576125a361576b565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507f3c36656d3e8c3db21a1c7d0a7208d73387e15535964c44c30b20c45ab51b3c388282815181106126155761261561576b565b602002602001015160405161263991906001600160a01b0391909116815260200190565b60405180910390a161264a81615807565b9050612581565b600061265d6001614353565b90508015612675576000805461ff0019166101001790555b61267d6143e0565b612685614407565b61268d614437565b6126ca604051806060016040528060248152602001615e6a60249139604051806040016040528060038152602001621390d560ea1b81525061446a565b6126d5600033613d30565b8015611784576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001611239565b6065546001600160a01b031633146127415760405162461bcd60e51b81526004016111959061570c565b60005b82518110156128af578415156001036127fd57600161019684838151811061276e5761276e61576b565b60200260200101516040516127839190615902565b908152602001604051809103902060006101000a81548160ff0219169083151502179055507fa27e97999993c298fae0b7088ff732fe078cc1585665ee1554220b3cbe6317a98382815181106127db576127db61576b565b60200260200101516040516127f09190614fba565b60405180910390a161289f565b60006101968483815181106128145761281461576b565b60200260200101516040516128299190615902565b908152602001604051809103902060006101000a81548160ff0219169083151502179055507f0127ddc00426c693b5becb26ba43a260c781ebc323b61d3b24b61e4dc5c93c718382815181106128815761288161576b565b60200260200101516040516128969190614fba565b60405180910390a15b6128a881615807565b9050612744565b5060005b8151811015612a1e5784151560010361296c5760016101978383815181106128dd576128dd61576b565b60200260200101516040516128f29190615902565b908152602001604051809103902060006101000a81548160ff0219169083151502179055507f156643e9a7f860e95993739893595e6ee1d04d9ff1b98567dbe9d5681cd152b282828151811061294a5761294a61576b565b602002602001015160405161295f9190614fba565b60405180910390a1612a0e565b60006101978383815181106129835761298361576b565b60200260200101516040516129989190615902565b908152602001604051809103902060006101000a81548160ff0219169083151502179055507f21a77ac4edf49633047cc4e32b10dfe633811216214400e0e1f507c3f7287b618282815181106129f0576129f061576b565b6020026020010151604051612a059190614fba565b60405180910390a15b612a1781615807565b90506128b3565b5060005b83518110156115f957841515600103612adb576001610195858381518110612a4c57612a4c61576b565b6020026020010151604051612a619190615902565b908152602001604051809103902060006101000a81548160ff0219169083151502179055507f3df7a1330febee3646ae4a0f0e46c94c046f0ee810b2b7f1fa10fa8f34d7b7ef848281518110612ab957612ab961576b565b6020026020010151604051612ace9190614fba565b60405180910390a1612b7d565b6000610195858381518110612af257612af261576b565b6020026020010151604051612b079190615902565b908152602001604051809103902060006101000a81548160ff0219169083151502179055507fc84badb33408cce6e89b30a735d8f06e094fa4a19c01c2da66718f490c672f65848281518110612b5f57612b5f61576b565b6020026020010151604051612b749190614fba565b60405180910390a15b612b8681615807565b9050612a22565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a612bb88133612f3c565b80612bdc575033612bd16065546001600160a01b031690565b6001600160a01b0316145b612bf85760405162461bcd60e51b8152600401611195906158dc565b6117846144b8565b6065546001600160a01b03163314612c2a5760405162461bcd60e51b81526004016111959061570c565b60005b81518110156116a45760016101996000848481518110612c4f57612c4f61576b565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507f2e333bce7bf5a0097fbb4fef2a950809960b5a4aa1a63cbcffc24ac62dc4fd07828281518110612cc157612cc161576b565b6020026020010151604051612ce591906001600160a01b0391909116815260200190565b60405180910390a1612cf681615807565b9050612c2d565b60975460ff1615612d205760405162461bcd60e51b815260040161119590615741565b6001600160a01b03821660009081526101a1602052604090205460ff16612d785760405162461bcd60e51b815260206004820152600c60248201526b139bdd08195e195b5c1d195960a21b6044820152606401611195565b612d828282613be9565b60405163079cc67960e41b8152336004820152602481018290526001600160a01b038316906379cc679090604401600060405180830381600087803b158015612dca57600080fd5b505af11580156115f7573d6000803e3d6000fd5b6101a2546001600160a01b03163314612e355760405162461bcd60e51b81526020600482015260196024820152784f6e6c7920526f757465722066756e6374696f6e616c69747960381b6044820152606401611195565b6116a48282614051565b6065546001600160a01b03163314612e695760405162461bcd60e51b81526004016111959061570c565b60005b81518110156116a45760006101996000848481518110612e8e57612e8e61576b565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507f9cee5064afac40e291311ecb6a670ef3ef652131fb1ed15c1266fb22cffd6bdd828281518110612f0057612f0061576b565b6020026020010151604051612f2491906001600160a01b0391909116815260200190565b60405180910390a1612f3581615807565b9050612e6c565b600091825260fb602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6060603780546110d0906156d2565b6101948181548110612f8757600080fd5b6000918252602090912001546001600160a01b0316905081565b60003381612faf8286613866565b90508381101561300f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401611195565b61301c8286868403613ac5565b506001949350505050565b6000826001600160a01b03811661303d57600080fd5b306001600160a01b0382160361305257600080fd5b61301c8484614510565b60006130bd60405180610140016040528060608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160006001600160a01b031681525090565b6131396040518061016001604052806060815260200160006001600160401b0316815260200160006001600160401b031681526020016000815260200160006001600160401b03168152602001600015158152602001600015158152602001606081526020016060815260200160608152602001606081525090565b836001600160a01b031663152583de6040518163ffffffff1660e01b8152600401600060405180830381865afa158015613177573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261319f9190810190615ac7565b61019f5460208201519294509092506001600160401b03908116911610156131fe5760405162461bcd60e51b815260206004820152601260248201527114dd185c9d081d1a5b59481d1bdbc81bdb1960721b6044820152606401611195565b61019f60099054906101000a900460ff16151561019583606001516040516132269190615902565b9081526040519081900360200190205460ff1615151461327e5760405162461bcd60e51b8152602060048201526013602482015272149959da5bdb881b9bdd081858d8d95c1d1959606a1b6044820152606401611195565b61019f600a9054906101000a900460ff16151561019683602001516040516132a69190615902565b9081526040519081900360200190205460ff161515146133005760405162461bcd60e51b815260206004820152601560248201527414dd185b99185c99081b9bdd081858d8d95c1d1959605a1b6044820152606401611195565b61019f600b9054906101000a900460ff16151561019783604001516040516133289190615902565b9081526040519081900360200190205460ff161515146111615760405162461bcd60e51b815260206004820152601860248201527f4d6574686f646f6c6f6779206e6f7420616363657074656400000000000000006044820152606401611195565b6065546001600160a01b031633146133b45760405162461bcd60e51b81526004016111959061570c565b6001600160a01b0381166134005760405162461bcd60e51b8152602060048201526013602482015272496e76616c696420666565206164647265737360681b6044820152606401611195565b61019b80546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b0316331461344d5760405162461bcd60e51b81526004016111959061570c565b6101918190556040518181527f4e44c8be34d12f1b7f56b13b4bbe97e64ca37a91916f86c73412da80c21748e290602001611239565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b086134ae8133612f3c565b806134d25750336134c76065546001600160a01b031690565b6001600160a01b0316145b6134ee5760405162461bcd60e51b8152600401611195906158dc565b816135245760405162461bcd60e51b81526020600482015260066024820152652174636f327360d01b6044820152606401611195565b6135316101948484614e4c565b507f9204d457ace303c5dbbeaa6966e5ec65661a390007a367c6645e52b4ef4b528e8383604051613563929190615c84565b60405180910390a1505050565b606061019480548060200260200160405190810160405280929190818152602001828054801561114957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116135ab575050505050905090565b6065546001600160a01b031633146135fc5760405162461bcd60e51b81526004016111959061570c565b6101a280546001600160a01b0319166001600160a01b0392909216919091179055565b600082815260fb602052604090206001015461363a81613d26565b6116258383613db6565b600061364f60355490565b6101915461365d9190615797565b905090565b6065546001600160a01b0316331461368c5760405162461bcd60e51b81526004016111959061570c565b6001600160a01b03811660008181526101a16020908152604091829020805460ff1916905590519182527fd1fc9d8986829d0ba9df2bc201a2c76327e0f71567b5a2fb82ba464bf4a03f449101611239565b6101935460405163787d871360e01b81526001600160a01b038381166004830152600092839291169063787d871390602401602060405180830381865afa15801561372d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137519190615cc7565b905080156137fd576001600160a01b0383166000908152610199602052604090205460ff16156137845750600192915050565b6001600160a01b038316600090815261019a602052604090205460ff16156137e15760405162461bcd60e51b815260206004820152601060248201526f213630b1b5b634b9ba32b2102a21a79960811b6044820152606401611195565b6137ea8361305c565b15156001146137f857600080fd5b61385d565b6001600160a01b0383166000908152610198602052604090205460ff16151560011461385d5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081dda1a5d195b1a5cdd1959608a1b6044820152606401611195565b50600192915050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6065546001600160a01b031633146138bb5760405162461bcd60e51b81526004016111959061570c565b6001600160a01b0381166139085760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206275726e206164647265737360601b6044820152606401611195565b61019d80546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146139555760405162461bcd60e51b81526004016111959061570c565b61019380546001600160a01b0319166001600160a01b0383169081179091556040519081527f86907b53cf2024579968511876daf0b4620d65803b550e33101baf70aeb6f5eb90602001611239565b6065546001600160a01b031633146139ce5760405162461bcd60e51b81526004016111959061570c565b6127108110613a185760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206665652070657263656e7461676560501b6044820152606401611195565b61019c55565b6065546001600160a01b03163314613a485760405162461bcd60e51b81526004016111959061570c565b6001600160a01b038116613aad5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401611195565b611784816141a7565b6001600160a01b03163b151590565b6001600160a01b038316613b275760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401611195565b6001600160a01b038216613b885760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401611195565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60975460ff1615613c0c5760405162461bcd60e51b815260040161119590615741565b6001600160a01b03821660009081526101926020526040902054811115613c6d5760405162461bcd60e51b8152602060048201526015602482015274416d6f756e74206578636565647320737570706c7960581b6044820152606401611195565b613c7733826141f9565b6001600160a01b0382166000908152610192602052604081208054839290613ca0908490615797565b90915550613cba90506001600160a01b038316338361451e565b604080513381526001600160a01b03841660208201529081018290527f27d4634c833b7622a0acddbf7f746183625f105945e95c723ad1d5a9f2a0b6fc90606001611933565b600033613d0e85828561454e565b613d198585856145c2565b60019150505b9392505050565b611784813361479b565b613d3a8282612f3c565b6116a457600082815260fb602090815260408083206001600160a01b03851684529091529020805460ff19166001179055613d723390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b613dc08282612f3c565b156116a457600082815260fb602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6065546001600160a01b031633146117845760405162461bcd60e51b81526004016111959061570c565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615613e7a57611625836147ff565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015613ed4575060408051601f3d908101601f19168201909252613ed191810190615ce4565b60015b613f375760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401611195565b600080516020615e238339815191528114613fa65760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401611195565b5061162583838361489b565b6000613d1f83836148c0565b60975460ff166140075760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401611195565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166140a75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401611195565b6140b3600083836148e5565b80603560008282546140c591906157ef565b90915550506001600160a01b038216600090815260336020526040812080548392906140f29084906157ef565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6040516001600160a01b038085166024830152831660448201526064810182905261139e9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261492a565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166142595760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401611195565b614265826000836148e5565b6001600160a01b038216600090815260336020526040902054818110156142d95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401611195565b6001600160a01b0383166000908152603360205260408120838303905560358054849290614308908490615797565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b60008054610100900460ff161561439a578160ff1660011480156143765750303b155b6143925760405162461bcd60e51b815260040161119590615cfd565b506000919050565b60005460ff8084169116106143c15760405162461bcd60e51b815260040161119590615cfd565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166124705760405162461bcd60e51b815260040161119590615d4b565b600054610100900460ff1661442e5760405162461bcd60e51b815260040161119590615d4b565b612470336141a7565b600054610100900460ff1661445e5760405162461bcd60e51b815260040161119590615d4b565b6097805460ff19169055565b600054610100900460ff166144915760405162461bcd60e51b815260040161119590615d4b565b81516144a4906036906020850190614eaf565b508051611625906037906020840190614eaf565b60975460ff16156144db5760405162461bcd60e51b815260040161119590615741565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586140343390565b6000336111618185856145c2565b6040516001600160a01b03831660248201526044810182905261162590849063a9059cbb60e01b90606401614170565b600061455a8484613866565b9050600019811461139e57818110156145b55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401611195565b61139e8484848403613ac5565b6001600160a01b0383166146265760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401611195565b6001600160a01b0382166146885760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401611195565b6146938383836148e5565b6001600160a01b0383166000908152603360205260409020548181101561470b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401611195565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906147429084906157ef565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161478e91815260200190565b60405180910390a361139e565b6147a58282612f3c565b6116a4576147bd816001600160a01b031660146149fc565b6147c88360206149fc565b6040516020016147d9929190615d96565b60408051601f198184030181529082905262461bcd60e51b825261119591600401614fba565b6001600160a01b0381163b61486c5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401611195565b600080516020615e2383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6148a483614b97565b6000825111806148b15750805b156116255761139e8383614bd7565b600081518351148015613d1f5750508051602091820120825192909101919091201490565b60975460ff16156116255760405162461bcd60e51b815260206004820152600f60248201526e14185d5cd9590818dbdb9d1c9858dd608a1b6044820152606401611195565b600061497f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614ccb9092919063ffffffff16565b805190915015611625578080602001905181019061499d9190615cc7565b6116255760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611195565b60606000614a0b8360026157ae565b614a169060026157ef565b6001600160401b03811115614a2d57614a2d6150b7565b6040519080825280601f01601f191660200182016040528015614a57576020820181803683370190505b509050600360fc1b81600081518110614a7257614a7261576b565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110614aa157614aa161576b565b60200101906001600160f81b031916908160001a9053506000614ac58460026157ae565b614ad09060016157ef565b90505b6001811115614b48576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110614b0457614b0461576b565b1a60f81b828281518110614b1a57614b1a61576b565b60200101906001600160f81b031916908160001a90535060049490941c93614b4181615e0b565b9050614ad3565b508315613d1f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401611195565b614ba0816147ff565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b614c3f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401611195565b600080846001600160a01b031684604051614c5a9190615902565b600060405180830381855af49150503d8060008114614c95576040519150601f19603f3d011682016040523d82523d6000602084013e614c9a565b606091505b5091509150614cc28282604051806060016040528060278152602001615e4360279139614ce2565b95945050505050565b6060614cda8484600085614d1b565b949350505050565b60608315614cf1575081613d1f565b825115614d015782518084602001fd5b8160405162461bcd60e51b81526004016111959190614fba565b606082471015614d7c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401611195565b6001600160a01b0385163b614dd35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611195565b600080866001600160a01b03168587604051614def9190615902565b60006040518083038185875af1925050503d8060008114614e2c576040519150601f19603f3d011682016040523d82523d6000602084013e614e31565b606091505b5091509150614e41828286614ce2565b979650505050505050565b828054828255906000526020600020908101928215614e9f579160200282015b82811115614e9f5781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190614e6c565b50614eab929150614f23565b5090565b828054614ebb906156d2565b90600052602060002090601f016020900481019282614edd5760008555614e9f565b82601f10614ef657805160ff1916838001178555614e9f565b82800160010185558215614e9f579182015b82811115614e9f578251825591602001919060010190614f08565b5b80821115614eab5760008155600101614f24565b600060208284031215614f4a57600080fd5b81356001600160e01b031981168114613d1f57600080fd5b60005b83811015614f7d578181015183820152602001614f65565b8381111561139e5750506000910152565b60008151808452614fa6816020860160208601614f62565b601f01601f19169290920160200192915050565b602081526000613d1f6020830184614f8e565b6001600160a01b038116811461178457600080fd5b60008060408385031215614ff557600080fd5b823561500081614fcd565b946020939093013593505050565b60006020828403121561502057600080fd5b8135613d1f81614fcd565b6001600160401b038116811461178457600080fd5b60006020828403121561505257600080fd5b8135613d1f8161502b565b60006020828403121561506f57600080fd5b5035919050565b60008060006060848603121561508b57600080fd5b833561509681614fcd565b925060208401356150a681614fcd565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b03811182821017156150f0576150f06150b7565b60405290565b60405161014081016001600160401b03811182821017156150f0576150f06150b7565b604051601f8201601f191681016001600160401b0381118282101715615141576151416150b7565b604052919050565b60006001600160401b03821115615162576151626150b7565b5060051b60200190565b600082601f83011261517d57600080fd5b8135602061519261518d83615149565b615119565b82815260059290921b840181019181810190868411156151b157600080fd5b8286015b848110156151d55780356151c881614fcd565b83529183019183016151b5565b509695505050505050565b600080604083850312156151f357600080fd5b82356001600160401b038082111561520a57600080fd5b6152168683870161516c565b935060209150818501358181111561522d57600080fd5b85019050601f8101861361524057600080fd5b803561524e61518d82615149565b81815260059190911b8201830190838101908883111561526d57600080fd5b928401925b8284101561528b57833582529284019290840190615272565b80955050505050509250929050565b600080604083850312156152ad57600080fd5b8235915060208301356152bf81614fcd565b809150509250929050565b60006001600160401b038211156152e3576152e36150b7565b50601f01601f191660200190565b60006152ff61518d846152ca565b905082815283838301111561531357600080fd5b828260208301376000602084830101529392505050565b600082601f83011261533b57600080fd5b613d1f838335602085016152f1565b801515811461178457600080fd5b6000806040838503121561536b57600080fd5b82356001600160401b0381111561538157600080fd5b61538d8582860161532a565b92505060208301356152bf8161534a565b6000602082840312156153b057600080fd5b81356001600160401b038111156153c657600080fd5b614cda8482850161516c565b600081518084526020808501945080840160005b8381101561540b5781516001600160a01b0316875295820195908201906001016153e6565b509495945050505050565b60408152600061542960408301856153d2565b82810360208481019190915284518083528582019282019060005b8181101561546057845183529383019391830191600101615444565b5090979650505050505050565b6000806040838503121561548057600080fd5b823561548b81614fcd565b915060208301356001600160401b038111156154a657600080fd5b8301601f810185136154b757600080fd5b6154c6858235602084016152f1565b9150509250929050565b600082601f8301126154e157600080fd5b813560206154f161518d83615149565b82815260059290921b8401810191818101908684111561551057600080fd5b8286015b848110156151d55780356001600160401b038111156155335760008081fd5b6155418986838b010161532a565b845250918301918301615514565b6000806000806080858703121561556557600080fd5b84356155708161534a565b935060208501356001600160401b038082111561558c57600080fd5b615598888389016154d0565b945060408701359150808211156155ae57600080fd5b6155ba888389016154d0565b935060608701359150808211156155d057600080fd5b506155dd878288016154d0565b91505092959194509250565b6000602082840312156155fb57600080fd5b81356001600160401b0381111561561157600080fd5b614cda8482850161532a565b6000806020838503121561563057600080fd5b82356001600160401b038082111561564757600080fd5b818501915085601f83011261565b57600080fd5b81358181111561566a57600080fd5b8660208260051b850101111561567f57600080fd5b60209290920196919550909350505050565b602081526000613d1f60208301846153d2565b600080604083850312156156b757600080fd5b82356156c281614fcd565b915060208301356152bf81614fcd565b600181811c908216806156e657607f821691505b60208210810361570657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156157a9576157a9615781565b500390565b60008160001904831182151516156157c8576157c8615781565b500290565b6000826157ea57634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561580257615802615781565b500190565b60006001820161581957615819615781565b5060010190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6040815260006158cb6040830185614f8e565b905082151560208301529392505050565b6020808252600c908201526b155b985d5d1a1bdc9a5e995960a21b604082015260600190565b60008251615914818460208701614f62565b9190910192915050565b600082601f83011261592f57600080fd5b815161593d61518d826152ca565b81815284602083860101111561595257600080fd5b614cda826020830160208701614f62565b80516143db81614fcd565b80516143db8161502b565b80516143db8161534a565b6000610160828403121561599757600080fd5b61599f6150cd565b905081516001600160401b03808211156159b857600080fd5b6159c48583860161591e565b83526159d26020850161596e565b60208401526159e36040850161596e565b6040840152606084015160608401526159fe6080850161596e565b6080840152615a0f60a08501615979565b60a0840152615a2060c08501615979565b60c084015260e0840151915080821115615a3957600080fd5b615a458583860161591e565b60e084015261010091508184015181811115615a6057600080fd5b615a6c8682870161591e565b838501525061012091508184015181811115615a8757600080fd5b615a938682870161591e565b838501525061014091508184015181811115615aae57600080fd5b615aba8682870161591e565b8385015250505092915050565b60008060408385031215615ada57600080fd5b82516001600160401b0380821115615af157600080fd5b908401906101408287031215615b0657600080fd5b615b0e6150f6565b825182811115615b1d57600080fd5b615b298882860161591e565b825250602083015182811115615b3e57600080fd5b615b4a8882860161591e565b602083015250604083015182811115615b6257600080fd5b615b6e8882860161591e565b604083015250606083015182811115615b8657600080fd5b615b928882860161591e565b606083015250608083015182811115615baa57600080fd5b615bb68882860161591e565b60808301525060a083015182811115615bce57600080fd5b615bda8882860161591e565b60a08301525060c083015182811115615bf257600080fd5b615bfe8882860161591e565b60c08301525060e083015182811115615c1657600080fd5b615c228882860161591e565b60e0830152506101008084015183811115615c3c57600080fd5b615c488982870161591e565b828401525050610120615c5c818501615963565b908201526020860151909450915080821115615c7757600080fd5b506154c685828601615984565b60208082528181018390526000908460408401835b868110156151d5578235615cac81614fcd565b6001600160a01b031682529183019190830190600101615c99565b600060208284031215615cd957600080fd5b8151613d1f8161534a565b600060208284031215615cf657600080fd5b5051919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351615dce816017850160208801614f62565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351615dff816028840160208801614f62565b01602801949350505050565b600081615e1a57615e1a615781565b50600019019056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564546f7563616e2050726f746f636f6c3a204e617475726520436172626f6e20546f6e6e65a2646970667358221220c7f0d344081ea3283d40ff0a00df0bc80e8920d138616f03fab1c5a060005c7264736f6c634300080e0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAttributes(bool,string[],string[],string[])": {
        "params": {
          "addToList": "determines whether attribute should be added or removed Other params are arrays of attributes to be added"
        }
      },
      "addRedeemFeeExemptedAddress(address)": {
        "params": {
          "_address": "address to be exempted on redeem fees"
        }
      },
      "addRedeemFeeExemptedTCO2(address)": {
        "params": {
          "_tco2": "TCO2 to be exempted on redeem fees"
        }
      },
      "addToExternalWhiteList(address[])": {
        "params": {
          "erc20Addr": "accepts an array of contract addresses"
        }
      },
      "addToInternalBlackList(address[])": {
        "params": {
          "erc20Addr": "accepts an array of contract addresses"
        }
      },
      "addToInternalWhiteList(address[])": {
        "params": {
          "erc20Addr": "accepts an array of contract addresses"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "bridgeBurn(address,uint256)": {
        "details": "invoked only by the ToucanCrosschainMessenger (Router)",
        "params": {
          "_account": "account that will be burned with corss-chain bridged tokens",
          "_amount": "amount of tokens that will be burned"
        }
      },
      "bridgeMint(address,uint256)": {
        "details": "invoked only by the ToucanCrosschainMessenger (Router)",
        "params": {
          "_account": "account that will be minted with corss-chain bridged tokens",
          "_amount": "amount of tokens that will be minted"
        }
      },
      "calculateRedeemFees(address[],uint256[])": {
        "details": "User specifies in front-end the addresses and amounts they want",
        "params": {
          "amounts": "Array of amounts to redeem for each tco2s",
          "tco2s": "Array of TCO2 contract addresses"
        },
        "returns": {
          "_0": "Total fees amount"
        }
      },
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(address,uint256)": {
        "details": "Eligibility is checked via `checkEligible`, balances are tracked for each TCO2 separately",
        "params": {
          "erc20Addr": "ERC20 contract address to be deposited, requires approve"
        }
      },
      "getRemaining()": {
        "details": "Returns the remaining space in pool before hitting the cap"
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "wraps _pause(), only Admin"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "proxiableUUID()": {
        "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
      },
      "redeemAndBurn(address,uint256)": {
        "details": "User needs to approve the pool contract in the TCO2 contract for the amount to be burnt before executing this function.",
        "params": {
          "amount": "Amount to redeem and burn",
          "tco2": "TCO2 to redeem and burn"
        }
      },
      "redeemAuto(uint256)": {
        "details": "NCT Pool tokens in user's wallet get burned",
        "params": {
          "amount": "Total amount to be redeemed"
        }
      },
      "redeemAuto2(uint256)": {
        "params": {
          "amount": "Total amount to be redeemed"
        },
        "returns": {
          "tco2s": "amounts The addresses and amounts of the TCO2s that were automatically redeemed"
        }
      },
      "redeemMany(address[],uint256[])": {
        "details": "User specifies in front-end the addresses and amounts they want",
        "params": {
          "amounts": "Array of amounts to redeem for each tco2s NCT Pool token in user's wallet get burned",
          "tco2s": "Array of TCO2 contract addresses"
        }
      },
      "removeFromExternalWhiteList(address[])": {
        "params": {
          "erc20Addr": "accepts an array of contract addresses"
        }
      },
      "removeFromInternalBlackList(address[])": {
        "params": {
          "erc20Addr": "accepts an array of contract addresses"
        }
      },
      "removeFromInternalWhiteList(address[])": {
        "params": {
          "erc20Addr": "accepts an array of contract addressesc"
        }
      },
      "removeRedeemFeeExemptedAddress(address)": {
        "params": {
          "_address": "address to be removed from exemption"
        }
      },
      "removeRedeemFeeExemptedTCO2(address)": {
        "params": {
          "_tco2": "TCO2 to be removed from exemption"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setFeeRedeemBurnAddress(address)": {
        "params": {
          "_feeRedeemBurnAddress": "address to transfer the fees to burn"
        }
      },
      "setFeeRedeemBurnPercentage(uint256)": {
        "params": {
          "_feeRedeemBurnPercentageInBase": "percentage of fee in base"
        }
      },
      "setFeeRedeemPercentage(uint256)": {
        "params": {
          "_feeRedeemPercentageInBase": "percentage of fee in base"
        }
      },
      "setFeeRedeemReceiver(address)": {
        "params": {
          "_feeRedeemReceiver": "address to transfer the fees"
        }
      },
      "setMinimumVintageStartTime(uint64)": {
        "params": {
          "_minimumVintageStartTime": "unix time format"
        }
      },
      "setRouter(address)": {
        "details": "use this method to set router address",
        "params": {
          "_router": "address of ToucanCrosschainMessenger"
        }
      },
      "setSupplyCap(uint256)": {
        "details": "supplyCap is initially set to 0 and must be increased before deposits"
      },
      "setTCO2Scoring(address[])": {
        "params": {
          "tco2s": "array of ordered TCO2 addresses"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "switchMapping(string,bool)": {
        "params": {
          "_mappingName": "attribute mapping of project-vintage data",
          "accepted": "determines if mapping works as black or whitelist"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Unpause the system, wraps _unpause(), only Admin"
      },
      "upgradeTo(address)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "upgradeToAndCall(address,bytes)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "version()": {
        "details": "Returns the current version of the smart contract"
      }
    },
    "stateVariables": {
      "feeRedeemDivider": {
        "details": "fees redeem percentage with 2 fixed decimals precision"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAttributes(bool,string[],string[],string[])": {
        "notice": "Function to add attributes for filtering (does not support complex AttributeSets)"
      },
      "addRedeemFeeExemptedAddress(address)": {
        "notice": "Adds a new address for redeem fees exemption"
      },
      "addRedeemFeeExemptedTCO2(address)": {
        "notice": "Adds a new TCO2 for redeem fees exemption"
      },
      "addToExternalWhiteList(address[])": {
        "notice": "Function to whitelist selected external non-TCO2 contracts by their address"
      },
      "addToInternalBlackList(address[])": {
        "notice": "Function to blacklist certain TCO2 contracts by their address"
      },
      "addToInternalWhiteList(address[])": {
        "notice": "Function to whitelist certain TCO2 contracts by their address"
      },
      "bridgeBurn(address,uint256)": {
        "notice": "burn tokens from account to be cross-chain bridged"
      },
      "bridgeMint(address,uint256)": {
        "notice": "mint tokens to receiver account that were cross-chain bridged"
      },
      "calculateRedeemFees(address[],uint256[])": {
        "notice": "View function to calculate fees pre-execution"
      },
      "checkAttributeMatching(address)": {
        "notice": "Checks whether incoming TCO2s match the accepted criteria/attributes"
      },
      "checkEligible(address)": {
        "notice": "Checks if token to be deposited is eligible for this pool"
      },
      "deposit(address,uint256)": {
        "notice": "Deposit function for NCT pool that accepts TCO2s and mints NCT 1:1"
      },
      "pause()": {
        "notice": "Emergency function to disable contract's core functionality"
      },
      "redeemAndBurn(address,uint256)": {
        "notice": "Redeem a whitelisted TCO2 without paying any fees and burn the TCO2. Initially added to burn HFC-23 credits, can be used in the future to dispose of any other whitelisted credits."
      },
      "redeemAuto(uint256)": {
        "notice": "Automatically redeems an amount of Pool tokens for underlying TCO2s from an array of ranked TCO2 contracts starting from contract at index 0 until amount is satisfied"
      },
      "redeemAuto2(uint256)": {
        "notice": "Automatically redeems an amount of Pool tokens for underlying TCO2s from an array of ranked TCO2 contracts starting from contract at index 0 until amount is satisfied. redeemAuto2 is slightly more expensive than redeemAuto but it is going to be more optimal to use by other on-chain contracts."
      },
      "redeemFeeExemptedAddresses(address)": {
        "notice": "End users exempted from redeem fees"
      },
      "redeemFeeExemptedTCO2s(address)": {
        "notice": "TCO2s exempted from redeem fees"
      },
      "redeemMany(address[],uint256[])": {
        "notice": "Redeems Pool tokens for multiple underlying TCO2s 1:1 minus fees"
      },
      "removeFromExternalWhiteList(address[])": {
        "notice": "Function to remove ERC20 addresses from external whitelist"
      },
      "removeFromInternalBlackList(address[])": {
        "notice": "Function to remove TCO2 addresses from internal blacklist"
      },
      "removeFromInternalWhiteList(address[])": {
        "notice": "Function to remove TCO2 addresses from internal whitelist"
      },
      "removeRedeemFeeExemptedAddress(address)": {
        "notice": "Removes an address from redeem fees exemption"
      },
      "removeRedeemFeeExemptedTCO2(address)": {
        "notice": "Removes a TCO2 from redeem fees exemption"
      },
      "router()": {
        "notice": "bridge router who has access to the bridgeMint & bridgeBurn functions which mint/burn pool tokens for cross chain messenges"
      },
      "scoredTCO2s(uint256)": {
        "notice": "array used to read from when redeeming TCO2s automatically"
      },
      "setFeeRedeemBurnAddress(address)": {
        "notice": "Update the fee redeem burn address"
      },
      "setFeeRedeemBurnPercentage(uint256)": {
        "notice": "Update the fee redeem burn percentage"
      },
      "setFeeRedeemPercentage(uint256)": {
        "notice": "Update the fee redeem percentage"
      },
      "setFeeRedeemReceiver(address)": {
        "notice": "Update the fee redeem receiver"
      },
      "setMinimumVintageStartTime(uint64)": {
        "notice": "Determines the minimum vintage start time acceptance criteria of TCO2s"
      },
      "setRouter(address)": {
        "notice": "method to set router address"
      },
      "setSupplyCap(uint256)": {
        "notice": "Function to limit the maximum NCT supply"
      },
      "setTCO2Scoring(address[])": {
        "notice": "Allows MANAGERs or the owner to pass an array to hold TCO2 contract addesses that are ordered by some form of scoring mechanism"
      },
      "switchMapping(string,bool)": {
        "notice": "Generic function to switch attributes mappings into either acceptance or rejection criteria"
      }
    },
    "notice": "Nature Carbon Tonne (or NatureCarbonTonne) Contract is an ERC20 compliant token that acts as a pool for TCO2 tokens",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1489,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 1492,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 4534,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 1890,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "_balances",
        "offset": 0,
        "slot": "51",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1896,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "_allowances",
        "offset": 0,
        "slot": "52",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 1898,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "53",
        "type": "t_uint256"
      },
      {
        "astId": 1900,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "_name",
        "offset": 0,
        "slot": "54",
        "type": "t_string_storage"
      },
      {
        "astId": 1902,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "_symbol",
        "offset": 0,
        "slot": "55",
        "type": "t_string_storage"
      },
      {
        "astId": 2481,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "__gap",
        "offset": 0,
        "slot": "56",
        "type": "t_array(t_uint256)45_storage"
      },
      {
        "astId": 980,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "_owner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 1092,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1781,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "_paused",
        "offset": 0,
        "slot": "151",
        "type": "t_bool"
      },
      {
        "astId": 1870,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 4841,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "__gap",
        "offset": 0,
        "slot": "201",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 596,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "_roles",
        "offset": 0,
        "slot": "251",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)591_storage)"
      },
      {
        "astId": 895,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "__gap",
        "offset": 0,
        "slot": "252",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1471,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "__gap",
        "offset": 0,
        "slot": "301",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 1759,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "__gap",
        "offset": 0,
        "slot": "351",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 15801,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "supplyCap",
        "offset": 0,
        "slot": "401",
        "type": "t_uint256"
      },
      {
        "astId": 15805,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "tokenBalances",
        "offset": 0,
        "slot": "402",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 15807,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "contractRegistry",
        "offset": 0,
        "slot": "403",
        "type": "t_address"
      },
      {
        "astId": 15811,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "scoredTCO2s",
        "offset": 0,
        "slot": "404",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 15816,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "regions",
        "offset": 0,
        "slot": "405",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 15820,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "standards",
        "offset": 0,
        "slot": "406",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 15824,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "methodologies",
        "offset": 0,
        "slot": "407",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 15829,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "externalWhiteList",
        "offset": 0,
        "slot": "408",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 15834,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "internalWhiteList",
        "offset": 0,
        "slot": "409",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 15839,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "internalBlackList",
        "offset": 0,
        "slot": "410",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 15842,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "feeRedeemReceiver",
        "offset": 0,
        "slot": "411",
        "type": "t_address"
      },
      {
        "astId": 15844,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "feeRedeemPercentageInBase",
        "offset": 0,
        "slot": "412",
        "type": "t_uint256"
      },
      {
        "astId": 15847,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "feeRedeemBurnAddress",
        "offset": 0,
        "slot": "413",
        "type": "t_address"
      },
      {
        "astId": 15850,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "feeRedeemBurnPercentageInBase",
        "offset": 0,
        "slot": "414",
        "type": "t_uint256"
      },
      {
        "astId": 15853,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "minimumVintageStartTime",
        "offset": 0,
        "slot": "415",
        "type": "t_uint64"
      },
      {
        "astId": 15855,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "seedMode",
        "offset": 8,
        "slot": "415",
        "type": "t_bool"
      },
      {
        "astId": 15857,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "regionsIsAcceptedMapping",
        "offset": 9,
        "slot": "415",
        "type": "t_bool"
      },
      {
        "astId": 15859,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "standardsIsAcceptedMapping",
        "offset": 10,
        "slot": "415",
        "type": "t_bool"
      },
      {
        "astId": 15861,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "methodologiesIsAcceptedMapping",
        "offset": 11,
        "slot": "415",
        "type": "t_bool"
      },
      {
        "astId": 15867,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "redeemFeeExemptedAddresses",
        "offset": 0,
        "slot": "416",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 15873,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "redeemFeeExemptedTCO2s",
        "offset": 0,
        "slot": "417",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 15877,
        "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
        "label": "router",
        "offset": 0,
        "slot": "418",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)45_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[45]",
        "numberOfBytes": "1440"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)591_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)591_storage"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(RoleData)591_storage": {
        "encoding": "inplace",
        "label": "struct AccessControlUpgradeable.RoleData",
        "members": [
          {
            "astId": 588,
            "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 590,
            "contract": "contracts/pools/NCT.sol:NatureCarbonTonne",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}