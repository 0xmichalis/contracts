// SPDX-FileCopyrightText: 2021 Toucan Labs
//
// SPDX-License-Identifier: UNLICENSED

// If you encounter a vulnerability or an issue, please contact <security@toucan.earth> or visit security.toucan.earth
pragma solidity >=0.8.4 <=0.8.14;

import '@openzeppelin/contracts/access/Ownable.sol';
import '@openzeppelin/contracts/utils/Context.sol';
import '@openzeppelin/contracts/security/Pausable.sol';

import './Pool.sol';
import './../interfaces/IToucanContractRegistry.sol';
import './../interfaces/ICarbonOffsetBatches.sol';

// ConfigurablePool contracts allow for different tokenized carbon credits to be pooled
// in order to increase liquidity

// There can be various different pools with different configurations
// in each configuration different acceptance criteria can be applied
// NOTE: WIP
contract ConfigurablePool is Ownable, Pool {
    address public contractRegistry;

    bool public isAttributeBenchMarkPool;
    bool public isWhiteListPool;

    // External Pool Filter set to false
    constructor(
        string memory name_,
        string memory _symbol,
        address _contractRegistry
    ) Pool(name_, _symbol, false) {
        contractRegistry = _contractRegistry;
    }

    // ------------------------
    //      Admin functions
    // ------------------------

    function makeAttributeBenchMarkPool() public onlyOwner {
        isAttributeBenchMarkPool = true;
    }

    // Makes this pool accept whitelisted ERC20 carbon tokens
    function makeAllowExternalPool() public onlyOwner {
        isWhiteListPool = true;
    }

    // ------------------------
    // Permissionless functions
    // ------------------------

    // WIP: function to check based on configuration
    // Could be a pool that accepts only Toucan contracts
    // And later externalWhitelist functionality gets added.
    function _checkEligible(address erc20Addr)
        internal
        view
        override
        returns (bool)
    {
        IToucanContractRegistry(contractRegistry).checkERC20(erc20Addr);
        return false;
    }
}
